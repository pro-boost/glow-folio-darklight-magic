{"version":3,"file":"Admin-Bi3oVUSM.js","sources":["../../../src/components/admin/ProjectsManager.tsx","../../../src/components/admin/SkillsManager.tsx","../../../src/pages/Admin.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { X, Plus, Pencil, Trash } from \"lucide-react\";\r\nimport { useToast } from \"@/components/ui/use-toast\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogFooter,\r\n} from \"@/components/ui/dialog\";\r\n\r\n// Sample project data structure\r\nconst initialProjects = [\r\n  {\r\n    id: \"1\",\r\n    title: \"E-commerce Platform\",\r\n    description:\r\n      \"A full-featured online store with product listings, cart functionality, and payment processing.\",\r\n    image:\r\n      \"https://images.unsplash.com/photo-1498050108023-c5249f4df085?auto=format&fit=crop&q=80&w=800\",\r\n    tags: [\"React\", \"Node.js\", \"MongoDB\", \"Stripe\"],\r\n    liveUrl: \"#\",\r\n    githubUrl: \"#\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    title: \"Task Management App\",\r\n    description:\r\n      \"A collaborative project management tool with real-time updates and team features.\",\r\n    image:\r\n      \"https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?auto=format&fit=crop&q=80&w=800\",\r\n    tags: [\"Next.js\", \"TypeScript\", \"Prisma\", \"Socket.io\"],\r\n    liveUrl: \"#\",\r\n    githubUrl: \"#\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    title: \"Personal Finance Dashboard\",\r\n    description:\r\n      \"An interactive dashboard for tracking expenses, investments, and financial goals.\",\r\n    image:\r\n      \"https://images.unsplash.com/photo-1461749280684-dccba630e2f6?auto=format&fit=crop&q=80&w=800\",\r\n    tags: [\"React\", \"Chart.js\", \"Firebase\", \"TailwindCSS\"],\r\n    liveUrl: \"#\",\r\n    githubUrl: \"#\",\r\n  },\r\n];\r\n\r\ninterface Project {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  image: string;\r\n  tags: string[];\r\n  liveUrl: string;\r\n  githubUrl: string;\r\n}\r\n\r\nconst ProjectsManager = () => {\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentProject, setCurrentProject] = useState<Project | null>(null);\r\n  const [tagInput, setTagInput] = useState(\"\");\r\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  useEffect(() => {\r\n    // Load projects from localStorage if available\r\n    const savedProjects = localStorage.getItem(\"portfolio-projects\");\r\n    if (savedProjects) {\r\n      try {\r\n        setProjects(JSON.parse(savedProjects));\r\n      } catch (error) {\r\n        console.error(\"Error loading projects from localStorage:\", error);\r\n        setProjects(initialProjects);\r\n      }\r\n    } else {\r\n      setProjects(initialProjects);\r\n    }\r\n  }, []);\r\n\r\n  const emptyProject: Project = {\r\n    id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    image: \"\",\r\n    tags: [],\r\n    liveUrl: \"\",\r\n    githubUrl: \"\",\r\n  };\r\n\r\n  const handleEdit = (project: Project) => {\r\n    setCurrentProject({ ...project });\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    setCurrentProject({ ...emptyProject, id: Date.now().toString() });\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const saveToLocalStorage = (updatedProjects: Project[]) => {\r\n    localStorage.setItem(\"portfolio-projects\", JSON.stringify(updatedProjects));\r\n    setHasUnsavedChanges(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!currentProject) return;\r\n\r\n    if (!currentProject.title) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Project title is required\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let updatedProjects: Project[];\r\n\r\n    if (projects.find((p) => p.id === currentProject.id)) {\r\n      updatedProjects = projects.map((p) =>\r\n        p.id === currentProject.id ? currentProject : p\r\n      );\r\n      setProjects(updatedProjects);\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Project updated successfully\",\r\n      });\r\n    } else {\r\n      updatedProjects = [...projects, currentProject];\r\n      setProjects(updatedProjects);\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Project created successfully\",\r\n      });\r\n    }\r\n\r\n    // Save to localStorage\r\n    saveToLocalStorage(updatedProjects);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleDelete = (id: string) => {\r\n    const updatedProjects = projects.filter((p) => p.id !== id);\r\n    setProjects(updatedProjects);\r\n\r\n    // Save to localStorage\r\n    saveToLocalStorage(updatedProjects);\r\n\r\n    toast({\r\n      title: \"Success\",\r\n      description: \"Project deleted successfully\",\r\n    });\r\n  };\r\n\r\n  // Track changes to projects\r\n  useEffect(() => {\r\n    setHasUnsavedChanges(true);\r\n  }, [projects]);\r\n\r\n  // Listen for global save event\r\n  useEffect(() => {\r\n    const handleSaveAll = () => {\r\n      if (hasUnsavedChanges) {\r\n        saveToLocalStorage(projects);\r\n        toast({\r\n          title: \"Projects Saved\",\r\n          description: \"Your projects have been updated successfully.\",\r\n        });\r\n      }\r\n    };\r\n\r\n    // Listen for save-all-changes event\r\n    window.addEventListener(\"save-all-changes\", handleSaveAll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"save-all-changes\", handleSaveAll);\r\n    };\r\n  }, [projects, hasUnsavedChanges]);\r\n\r\n  const addTag = () => {\r\n    if (!tagInput || !currentProject) return;\r\n    setCurrentProject({\r\n      ...currentProject,\r\n      tags: [...currentProject.tags, tagInput],\r\n    });\r\n    setTagInput(\"\");\r\n  };\r\n\r\n  const removeTag = (tag: string) => {\r\n    if (!currentProject) return;\r\n    setCurrentProject({\r\n      ...currentProject,\r\n      tags: currentProject.tags.filter((t) => t !== tag),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-semibold\">Manage Projects</h2>\r\n        <Button onClick={handleCreate} className=\"flex items-center gap-2\">\r\n          <Plus className=\"h-4 w-4\" /> Add Project\r\n        </Button>\r\n      </div>\r\n\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>Title</TableHead>\r\n            <TableHead>Description</TableHead>\r\n            <TableHead>Tags</TableHead>\r\n            <TableHead className=\"w-[120px]\">Actions</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {projects.map((project) => (\r\n            <TableRow key={project.id}>\r\n              <TableCell className=\"font-medium\">{project.title}</TableCell>\r\n              <TableCell className=\"max-w-xs truncate\">\r\n                {project.description}\r\n              </TableCell>\r\n              <TableCell>\r\n                <div className=\"flex flex-wrap gap-1\">\r\n                  {project.tags.slice(0, 2).map((tag) => (\r\n                    <span\r\n                      key={tag}\r\n                      className=\"px-2 py-1 bg-secondary text-xs rounded-full\"\r\n                    >\r\n                      {tag}\r\n                    </span>\r\n                  ))}\r\n                  {project.tags.length > 2 && (\r\n                    <span className=\"px-2 py-1 bg-secondary text-xs rounded-full\">\r\n                      +{project.tags.length - 2}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </TableCell>\r\n              <TableCell>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    onClick={() => handleEdit(project)}\r\n                  >\r\n                    <Pencil className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    onClick={() => handleDelete(project.id)}\r\n                  >\r\n                    <Trash className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      {/* Project Edit Dialog */}\r\n      <Dialog open={isOpen} onOpenChange={setIsOpen}>\r\n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle>\r\n              {currentProject?.id\r\n                ? `Edit Project: ${currentProject.title}`\r\n                : \"Create New Project\"}\r\n            </DialogTitle>\r\n          </DialogHeader>\r\n\r\n          {currentProject && (\r\n            <div className=\"grid gap-4 py-4\">\r\n              <div className=\"grid grid-cols-1 gap-2\">\r\n                <label htmlFor=\"title\" className=\"text-sm font-medium\">\r\n                  Title\r\n                </label>\r\n                <Input\r\n                  id=\"title\"\r\n                  value={currentProject.title}\r\n                  onChange={(e) =>\r\n                    setCurrentProject({\r\n                      ...currentProject,\r\n                      title: e.target.value,\r\n                    })\r\n                  }\r\n                  placeholder=\"Project title\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 gap-2\">\r\n                <label htmlFor=\"description\" className=\"text-sm font-medium\">\r\n                  Description\r\n                </label>\r\n                <Textarea\r\n                  id=\"description\"\r\n                  value={currentProject.description}\r\n                  onChange={(e) =>\r\n                    setCurrentProject({\r\n                      ...currentProject,\r\n                      description: e.target.value,\r\n                    })\r\n                  }\r\n                  placeholder=\"Project description\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 gap-2\">\r\n                <label htmlFor=\"image\" className=\"text-sm font-medium\">\r\n                  Image URL\r\n                </label>\r\n                <Input\r\n                  id=\"image\"\r\n                  value={currentProject.image}\r\n                  onChange={(e) =>\r\n                    setCurrentProject({\r\n                      ...currentProject,\r\n                      image: e.target.value,\r\n                    })\r\n                  }\r\n                  placeholder=\"https://example.com/image.webp\"\r\n                />\r\n                {currentProject.image && (\r\n                  <div className=\"mt-2 h-32 w-full overflow-hidden rounded-md\">\r\n                    <img\r\n                      src={currentProject.image}\r\n                      alt={currentProject.title}\r\n                      className=\"h-full w-full object-cover\"\r\n                      onError={(e) =>\r\n                        ((e.target as HTMLImageElement).src = \"placeholder.svg\")\r\n                      }\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 gap-2\">\r\n                <label className=\"text-sm font-medium\">Tags</label>\r\n                <div className=\"flex flex-wrap gap-2 mb-2\">\r\n                  {currentProject.tags.map((tag) => (\r\n                    <div\r\n                      key={tag}\r\n                      className=\"bg-secondary px-3 py-1 rounded-full text-xs font-medium flex items-center gap-1\"\r\n                    >\r\n                      {tag}\r\n                      <button\r\n                        onClick={() => removeTag(tag)}\r\n                        className=\"text-muted-foreground hover:text-foreground\"\r\n                      >\r\n                        <X className=\"h-3 w-3\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"flex gap-2\">\r\n                  <Input\r\n                    value={tagInput}\r\n                    onChange={(e) => setTagInput(e.target.value)}\r\n                    placeholder=\"Enter a tag\"\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n                        addTag();\r\n                      }\r\n                    }}\r\n                  />\r\n                  <Button type=\"button\" onClick={addTag}>\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 gap-2\">\r\n                <label htmlFor=\"liveUrl\" className=\"text-sm font-medium\">\r\n                  Live Demo URL\r\n                </label>\r\n                <Input\r\n                  id=\"liveUrl\"\r\n                  value={currentProject.liveUrl}\r\n                  onChange={(e) =>\r\n                    setCurrentProject({\r\n                      ...currentProject,\r\n                      liveUrl: e.target.value,\r\n                    })\r\n                  }\r\n                  placeholder=\"https://example.com\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 gap-2\">\r\n                <label htmlFor=\"githubUrl\" className=\"text-sm font-medium\">\r\n                  GitHub URL\r\n                </label>\r\n                <Input\r\n                  id=\"githubUrl\"\r\n                  value={currentProject.githubUrl}\r\n                  onChange={(e) =>\r\n                    setCurrentProject({\r\n                      ...currentProject,\r\n                      githubUrl: e.target.value,\r\n                    })\r\n                  }\r\n                  placeholder=\"https://github.com/username/project\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <DialogFooter>\r\n            <Button variant=\"outline\" onClick={() => setIsOpen(false)}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleSave}>Save</Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectsManager;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Plus, Pencil, Trash } from \"lucide-react\";\r\nimport { useToast } from \"@/components/ui/use-toast\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogFooter,\r\n} from \"@/components/ui/dialog\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\n\r\n// Sample skill categories\r\nconst categories = [\r\n  \"Frontend\",\r\n  \"Backend\",\r\n  \"Design\",\r\n  \"DevOps\",\r\n  \"Mobile\",\r\n  \"Other\",\r\n];\r\n\r\n// Sample initial skills\r\nconst defaultSkills = [\r\n  { id: \"1\", name: \"React\", category: \"Frontend\", level: 90 },\r\n  { id: \"2\", name: \"Node.js\", category: \"Backend\", level: 85 },\r\n\r\n  { id: \"3\", name: \"TypeScript\", category: \"Frontend\", level: 80 },\r\n  { id: \"4\", name: \"MongoDB\", category: \"Backend\", level: 75 },\r\n  { id: \"5\", name: \"TailwindCSS\", category: \"Frontend\", level: 95 },\r\n  { id: \"6\", name: \"Docker\", category: \"DevOps\", level: 70 },\r\n];\r\n\r\ninterface Skill {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  level: number;\r\n}\r\n\r\nconst SkillsManager = () => {\r\n  const [skills, setSkills] = useState<Skill[]>([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentSkill, setCurrentSkill] = useState<Skill | null>(null);\r\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  useEffect(() => {\r\n    // Load skills from localStorage if available\r\n    const savedSkills = localStorage.getItem(\"portfolio-skills\");\r\n    if (savedSkills) {\r\n      try {\r\n        setSkills(JSON.parse(savedSkills));\r\n      } catch (error) {\r\n        console.error(\"Error loading skills from localStorage:\", error);\r\n        setSkills(defaultSkills);\r\n      }\r\n    } else {\r\n      setSkills(defaultSkills);\r\n    }\r\n  }, []);\r\n\r\n  const emptySkill: Skill = {\r\n    id: \"\",\r\n    name: \"\",\r\n    category: categories[0],\r\n    level: 50,\r\n  };\r\n\r\n  const saveToLocalStorage = (updatedSkills: Skill[]) => {\r\n    localStorage.setItem(\"portfolio-skills\", JSON.stringify(updatedSkills));\r\n    setHasUnsavedChanges(false);\r\n  };\r\n\r\n  const handleEdit = (skill: Skill) => {\r\n    setCurrentSkill({ ...skill });\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    setCurrentSkill({ ...emptySkill, id: Date.now().toString() });\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!currentSkill) return;\r\n\r\n    if (!currentSkill.name) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Skill name is required\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let updatedSkills: Skill[];\r\n\r\n    if (skills.find((s) => s.id === currentSkill.id)) {\r\n      updatedSkills = skills.map((s) =>\r\n        s.id === currentSkill.id ? currentSkill : s\r\n      );\r\n      setSkills(updatedSkills);\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Skill updated successfully\",\r\n      });\r\n    } else {\r\n      updatedSkills = [...skills, currentSkill];\r\n      setSkills(updatedSkills);\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Skill created successfully\",\r\n      });\r\n    }\r\n\r\n    // Save to localStorage\r\n    saveToLocalStorage(updatedSkills);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleDelete = (id: string) => {\r\n    const updatedSkills = skills.filter((s) => s.id !== id);\r\n    setSkills(updatedSkills);\r\n\r\n    // Save to localStorage\r\n    saveToLocalStorage(updatedSkills);\r\n\r\n    toast({\r\n      title: \"Success\",\r\n      description: \"Skill deleted successfully\",\r\n    });\r\n  };\r\n\r\n  // Track changes to skills\r\n  useEffect(() => {\r\n    setHasUnsavedChanges(true);\r\n  }, [skills]);\r\n\r\n  // Listen for global save event\r\n  useEffect(() => {\r\n    const handleSaveAll = () => {\r\n      if (hasUnsavedChanges) {\r\n        saveToLocalStorage(skills);\r\n        toast({\r\n          title: \"Skills Saved\",\r\n          description: \"Your skills have been updated successfully.\",\r\n        });\r\n      }\r\n    };\r\n\r\n    // Listen for save-all-changes event\r\n    window.addEventListener(\"save-all-changes\", handleSaveAll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"save-all-changes\", handleSaveAll);\r\n    };\r\n  }, [skills, hasUnsavedChanges]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-semibold\">Manage Skills</h2>\r\n        <Button onClick={handleCreate} className=\"flex items-center gap-2\">\r\n          <Plus className=\"h-4 w-4\" /> Add Skill\r\n        </Button>\r\n      </div>\r\n\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>Name</TableHead>\r\n            <TableHead>Category</TableHead>\r\n            <TableHead>Proficiency</TableHead>\r\n            <TableHead className=\"w-[120px]\">Actions</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {skills.map((skill) => (\r\n            <TableRow key={skill.id}>\r\n              <TableCell className=\"font-medium\">{skill.name}</TableCell>\r\n              <TableCell>{skill.category}</TableCell>\r\n              <TableCell>\r\n                <div className=\"w-full bg-secondary rounded-full h-2.5\">\r\n                  <div\r\n                    className=\"bg-primary h-2.5 rounded-full\"\r\n                    style={{ width: `${skill.level}%` }}\r\n                  ></div>\r\n                </div>\r\n                <span className=\"text-xs text-muted-foreground\">\r\n                  {skill.level}%\r\n                </span>\r\n              </TableCell>\r\n              <TableCell>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    onClick={() => handleEdit(skill)}\r\n                  >\r\n                    <Pencil className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    onClick={() => handleDelete(skill.id)}\r\n                  >\r\n                    <Trash className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      {/* Skill Edit Dialog */}\r\n      <Dialog open={isOpen} onOpenChange={setIsOpen}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>\r\n              {currentSkill?.id\r\n                ? `Edit Skill: ${currentSkill.name}`\r\n                : \"Create New Skill\"}\r\n            </DialogTitle>\r\n          </DialogHeader>\r\n\r\n          {currentSkill && (\r\n            <div className=\"grid gap-4 py-4\">\r\n              <div className=\"grid grid-cols-1 gap-2\">\r\n                <label htmlFor=\"name\" className=\"text-sm font-medium\">\r\n                  Name\r\n                </label>\r\n                <Input\r\n                  id=\"name\"\r\n                  value={currentSkill.name}\r\n                  onChange={(e) =>\r\n                    setCurrentSkill({ ...currentSkill, name: e.target.value })\r\n                  }\r\n                  placeholder=\"Skill name\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 gap-2\">\r\n                <label htmlFor=\"category\" className=\"text-sm font-medium\">\r\n                  Category\r\n                </label>\r\n                <Select\r\n                  value={currentSkill.category}\r\n                  onValueChange={(value) =>\r\n                    setCurrentSkill({ ...currentSkill, category: value })\r\n                  }\r\n                >\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select category\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {categories.map((category) => (\r\n                      <SelectItem key={category} value={category}>\r\n                        {category}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 gap-2\">\r\n                <div className=\"flex justify-between\">\r\n                  <label htmlFor=\"level\" className=\"text-sm font-medium\">\r\n                    Proficiency Level\r\n                  </label>\r\n                  <span className=\"text-sm text-muted-foreground\">\r\n                    {currentSkill.level}%\r\n                  </span>\r\n                </div>\r\n                <Input\r\n                  id=\"level\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  value={currentSkill.level}\r\n                  onChange={(e) =>\r\n                    setCurrentSkill({\r\n                      ...currentSkill,\r\n                      level: parseInt(e.target.value),\r\n                    })\r\n                  }\r\n                  className=\"cursor-pointer\"\r\n                />\r\n                <div className=\"flex justify-between text-xs text-muted-foreground\">\r\n                  <span>Beginner</span>\r\n                  <span>Expert</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <DialogFooter>\r\n            <Button variant=\"outline\" onClick={() => setIsOpen(false)}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleSave}>Save</Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillsManager;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport ProjectsManager from \"@/components/admin/ProjectsManager\";\r\nimport SkillsManager from \"@/components/admin/SkillsManager\";\r\nimport ThemeManager from \"@/components/theme/ThemeManager\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ArrowLeft, Save } from \"lucide-react\";\r\nimport { useToast } from \"@/components/ui/use-toast\";\r\nimport Header from \"@/components/layout/Header\";\r\n\r\nconst Admin = () => {\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n\r\n  const handleSaveAllChanges = () => {\r\n    // Dispatch a custom event that all managers will listen for\r\n    window.dispatchEvent(new Event(\"save-all-changes\"));\r\n\r\n    // Show toast notification\r\n    toast({\r\n      title: \"Changes Saved\",\r\n      description: \"All changes have been applied to the main site.\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-background\">\r\n      <Header />\r\n      <div className=\"p-6 pt-24\">\r\n        <div className=\"max-w-6xl mx-auto\">\r\n          <div className=\"flex items-center justify-between mb-8\">\r\n            <h1 className=\"text-3xl font-bold\">Admin Dashboard</h1>\r\n            <div className=\"flex gap-2\">\r\n              <Button\r\n                onClick={handleSaveAllChanges}\r\n                variant=\"default\"\r\n                className=\"flex items-center gap-2\"\r\n              >\r\n                <Save className=\"h-4 w-4\" />\r\n                Save All Changes\r\n              </Button>\r\n              <Button\r\n                onClick={() => navigate(\"/\")}\r\n                variant=\"outline\"\r\n                className=\"flex items-center gap-2\"\r\n              >\r\n                <ArrowLeft className=\"h-4 w-4\" />\r\n                Back to Site\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <Tabs defaultValue=\"projects\" className=\"w-full\">\r\n            <TabsList className=\"grid w-full grid-cols-3 mb-8\">\r\n              <TabsTrigger value=\"projects\">Projects</TabsTrigger>\r\n              <TabsTrigger value=\"skills\">Skills</TabsTrigger>\r\n              <TabsTrigger value=\"theme\">Theme</TabsTrigger>\r\n            </TabsList>\r\n\r\n            <TabsContent\r\n              value=\"projects\"\r\n              className=\"bg-card p-6 rounded-lg border shadow-sm\"\r\n            >\r\n              <ProjectsManager />\r\n            </TabsContent>\r\n\r\n            <TabsContent\r\n              value=\"skills\"\r\n              className=\"bg-card p-6 rounded-lg border shadow-sm\"\r\n            >\r\n              <SkillsManager />\r\n            </TabsContent>\r\n\r\n            <TabsContent\r\n              value=\"theme\"\r\n              className=\"bg-card p-6 rounded-lg border shadow-sm\"\r\n            >\r\n              <ThemeManager />\r\n            </TabsContent>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"names":["initialProjects","id","title","description","image","tags","liveUrl","githubUrl","ProjectsManager","projects","setProjects","useState","isOpen","setIsOpen","currentProject","setCurrentProject","tagInput","setTagInput","hasUnsavedChanges","setHasUnsavedChanges","toast","useToast","useEffect","savedProjects","localStorage","getItem","JSON","parse","error","emptyProject","saveToLocalStorage","updatedProjects","setItem","stringify","handleSaveAll","window","addEventListener","removeEventListener","addTag","children","jsxs","className","jsx","Button","onClick","Date","now","toString","Plus","Table","TableHeader","TableRow","TableHead","TableBody","map","project","TableCell","slice","tag","jsxRuntimeExports","length","variant","size","handleEdit","Pencil","filter","p","handleDelete","Trash","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","htmlFor","Input","value","onChange","e","target","placeholder","Textarea","src","alt","onError","t","removeTag","X","onKeyDown","key","preventDefault","type","DialogFooter","find","categories","defaultSkills","name","category","level","SkillsManager","skills","setSkills","currentSkill","setCurrentSkill","savedSkills","emptySkill","updatedSkills","skill","style","width","s","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","min","max","parseInt","Admin","navigate","useNavigate","Header","dispatchEvent","Event","Save","ArrowLeft","Tabs","defaultValue","TabsList","TabsTrigger","TabsContent","ThemeManager"],"mappings":"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"}