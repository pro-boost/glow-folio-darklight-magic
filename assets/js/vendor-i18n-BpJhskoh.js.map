{"version":3,"file":"vendor-i18n-BpJhskoh.js","sources":["../../../node_modules/i18next/dist/esm/i18next.js"],"sourcesContent":["const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = (obj, path, keySeparator = '.') => {\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = {\n    ns: ['translation'],\n    defaultNS: 'translation'\n  }) {\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value, options = {\n    silent: false\n  }) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources, options = {\n    silent: false\n  }) {\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n    silent: false,\n    skipCopy: false\n  }) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key, o = {\n    interpolation: {}\n  }) {\n    const opt = {\n      ...o\n    };\n    if (key == null) return false;\n    const resolved = this.resolve(key, opt);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, opt) {\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    let namespaces = opt.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, o, lastKey) {\n    let opt = typeof o === 'object' ? {\n      ...o\n    } : o;\n    if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n      opt = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') opt = {\n      ...opt\n    };\n    if (!opt) opt = {};\n    if (keys == null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], opt);\n    const namespace = namespaces[namespaces.length - 1];\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const lng = opt.lng || this.language;\n    const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(opt)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, opt);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n    const hasDefaultValue = Translator.hasDefaultValue(opt);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n    const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n    const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!opt.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...opt,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(opt);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...opt,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n        } else {\n          lngs.push(opt.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, opt);\n              if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n        res = `${namespace}${nsSeparator}${key}`;\n      }\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(opt);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, opt, resolved, lastKey) {\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...opt\n      }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!opt.skipInterpolation) {\n      if (opt.interpolation) this.interpolator.init({\n        ...opt,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...opt.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) opt.nest = false;\n      }\n      if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n      if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n        if (lastKey?.[0] === args[0] && !opt.context) {\n          this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return this.translate(...args, key);\n      }, opt);\n      if (opt.interpolation) this.interpolator.reset();\n    }\n    const postProcess = opt.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(opt)\n        },\n        ...opt\n      } : opt, this);\n    }\n    return res;\n  }\n  resolve(keys, opt = {}) {\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, opt);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n      const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${opt.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, opt);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails(options = {}) {\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngScOnly = this.getScriptPartFromCode(code);\n        if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code, options = {}) {\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (v, l, o) => {\n    let optForCache = o;\n    if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [o.interpolationkey]: undefined\n      };\n    }\n    const key = l + JSON.stringify(optForCache);\n    let frm = cache[key];\n    if (!frm) {\n      frm = fn(getCleanedCode(l), o);\n      cache[key] = frm;\n    }\n    return frm(v);\n  };\n};\nconst createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.init(options);\n  }\n  init(services, options = {\n    interpolation: {}\n  }) {\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n    const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n    this.formats = {\n      number: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: cf((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: cf((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: cf((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng, options = {}) {\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  },\n  cacheInBuiltFormats: true\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init(options = {}, callback) {\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n    if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n      this.resolvedLanguage = l;\n      this.languages.unshift(l);\n    }\n  }\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        if (this.isLanguageChangingTo === lng) {\n          setLngProps(l);\n          this.translator.changeLanguage(l);\n          this.isLanguageChangingTo = undefined;\n          this.emit('languageChanged', l);\n          this.logger.log('languageChanged', l);\n        }\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const fl = isString(lngs) ? lngs : lngs && lngs[0];\n      const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let o;\n      if (typeof opts !== 'object') {\n        o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        o = {\n          ...opts\n        };\n      }\n      o.lng = o.lng || fixedT.lng;\n      o.lngs = o.lngs || fixedT.lngs;\n      o.ns = o.ns || fixedT.ns;\n      if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = this.options.keySeparator || '.';\n      let resultKey;\n      if (o.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${o.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return this.t(resultKey, o);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t(...args) {\n    return this.translator?.translate(...args);\n  }\n  exists(...args) {\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance(options = {}, callback) {\n    return new I18n(options, callback);\n  }\n  cloneInstance(options = {}, callback = noop) {\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, prev[l]);\n        return prev;\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n"],"names":["isString","obj","defer","res","rej","promise","Promise","resolve","reject","makeString","object","lastOfPathSeparatorRegExp","cleanKey","key","indexOf","replace","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","split","stackIndex","length","Object","prototype","hasOwnProperty","call","k","setPath","newValue","e","p","slice","last","getPath","deepExtend","target","source","overwrite","prop","String","regexEscape","str","_entityMap","escape","data","s","chars","looksLikeObjectPathRegExpCache","constructor","capacity","this","regExpMap","Map","regExpQueue","getRegExp","pattern","regExpFromCache","get","regExpNew","RegExp","delete","shift","set","push","deepFind","keySeparator","tokens","current","i","next","nextPath","j","getCleanedCode","code","consoleLogger","type","log","args","output","warn","error","_a","_b","console","apply","Logger","concreteLogger","options","init","prefix","logger","debug","forward","deprecate","lvl","debugOnly","create","moduleName","clone","baseLogger","EventEmitter","observers","on","events","listener","forEach","event","numListeners","off","emit","Array","from","entries","observer","numTimesAdded","ResourceStore","ns","defaultNS","ignoreJSONStructure","addNamespaces","removeNamespaces","index","splice","getResource","lng","isArray","result","join","addResource","value","silent","concat","addResources","resources","m","addResourceBundle","deep","skipCopy","pack","JSON","parse","stringify","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage","hasLanguageSomeTranslations","keys","find","v","toJSON","postProcessor","processors","addPostProcessor","module","name","handle","translator","processor","process","checkedLoadedFor","shouldHandleAsObject","Translator","services","t","changeLanguage","language","exists","o","interpolation","opt","resolved","extractFromKey","nsSeparator","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","possibleChars","filter","c","r","map","matched","test","ki","substring","looksLikeObjectPath","match","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","arguments","returnDetails","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","defaultValue","pluralSeparator","resForObjHndl","resType","toString","extendTranslation","usedDefault","isValidLookup","resForMissing","missingKeyNoValueFallbackToKey","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","returnObjects","returnedObjectHandler","resTypeIsArray","copy","newKeyToUse","deepKey","defaultVariables","skipInterpolation","skipOnVariables","nestBef","nb","interpolate","na","nest","context","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","optionsKeys","useOptionsReplaceForData","option","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","formattedCode","Intl","getCanonicalLocales","lowerCaseLng","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngScOnly","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","suffixesOrder","zero","one","two","few","many","other","dummyRule","select","resolvedOptions","pluralCategories","PluralResolver","pluralRulesCache","addRule","rules","clearCache","getRule","cleanedCode","cacheKey","rule","PluralRules","err","lngPart","needsPlural","getPluralFormsOfKey","sort","pluralCategory1","pluralCategory2","pluralCategory","prepend","deepFindWithDefaults","defaultData","getPathWithDefaults","regexSafe","val","Interpolator","format","escapeValue","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","replaces","handleFormat","interpolationkey","trim","f","missingInterpolationHandler","regex","safeValue","todo","exec","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","doReduce","elem","reduce","createCachedFormatter","fn","cache","optForCache","formatParams","frm","createNonCachedFormatter","Formatter","cf","cacheInBuiltFormats","formats","number","formatter","NumberFormat","currency","style","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","range","list","ListFormat","add","addCached","findIndex","mem","formatName","formatOptions","formatStr","optStr","rest","trimmedKey","isNaN","parseInt","parseFormatStr","formatted","valOptions","locale","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","state","queue","queueLoad","languages","callback","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","pendingCount","loaded","errors","q","pushPath","removePending","done","loadedKeys","n","read","fcName","tried","wait","resolver","setTimeout","bind","then","catch","prepareLoading","loadOne","fallbackValue","isUpdate","clb","_c","_d","_e","opts","initAsync","preload","simplifyPluralSuffix","partialBundledLanguages","ret","tDescription","transformOptions","initImmediate","noop","I18n","inst","modules","external","getOwnPropertyNames","getPrototypeOf","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","languageDetector","detection","deferred","finish","initializedStoreOnce","loadResources","usedCallback","append","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","unshift","isLanguageChangingTo","setLngProps","setLng","fl","cacheUserLanguage","async","detect","getFixedT","keyPrefix","fixedT","resultKey","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","createInstance","cloneInstance","forkResourceStore","mergedOptions","clonedData","prev","acc","instance"],"mappings":"AAAA,MAAMA,EAAkBC,GAAe,iBAARA,EACzBC,EAAQ,KACR,IAAAC,EACAC,EACJ,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KAC9BL,EAAAI,EACAH,EAAAI,KAID,OAFPH,EAAQE,QAAUJ,EAClBE,EAAQG,OAASJ,EACVC,GAEHI,EAAuBC,GACb,MAAVA,EAAuB,GACpB,GAAKA,EAORC,EAA4B,OAC5BC,EAAWC,GAAOA,GAAOA,EAAIC,QAAQ,QAAS,EAAKD,EAAIE,QAAQJ,EAA2B,KAAOE,EACjGG,EAAuBN,IAAWA,GAAUV,EAASU,GACrDO,EAAgB,CAACP,EAAQQ,EAAMC,KAC7B,MAAAC,EAASpB,EAASkB,GAAeA,EAAKG,MAAM,KAAlBH,EAChC,IAAII,EAAa,EACV,KAAAA,EAAaF,EAAMG,OAAS,GAAG,CACpC,GAAIP,EAAqBN,GAAS,MAAO,GACzC,MAAMG,EAAMD,EAASQ,EAAME,KACtBZ,EAAOG,IAAQM,IAAcT,EAAAG,GAAO,IAAIM,GAE3CT,EADEc,OAAOC,UAAUC,eAAeC,KAAKjB,EAAQG,GACtCH,EAAOG,GAEP,CAAA,IAETS,CACH,CACD,OAAIN,EAAqBN,GAAgB,GAClC,CACLT,IAAKS,EACLkB,EAAGhB,EAASQ,EAAME,MAGhBO,EAAU,CAACnB,EAAQQ,EAAMY,KACvB,MAAA7B,IACJA,EAAA2B,EACAA,GACEX,EAAcP,EAAQQ,EAAMM,QAChC,QAAY,IAARvB,GAAqC,IAAhBiB,EAAKK,OAE5B,YADAtB,EAAI2B,GAAKE,GAGX,IAAIC,EAAIb,EAAKA,EAAKK,OAAS,GACvBS,EAAId,EAAKe,MAAM,EAAGf,EAAKK,OAAS,GAChCW,EAAOjB,EAAcP,EAAQsB,EAAGR,QACpC,UAAoB,IAAbU,EAAKjC,KAAqB+B,EAAET,QACjCQ,EAAI,GAAGC,EAAEA,EAAET,OAAS,MAAMQ,IAC1BC,EAAIA,EAAEC,MAAM,EAAGD,EAAET,OAAS,GACnBW,EAAAjB,EAAcP,EAAQsB,EAAGR,SACtB,MAANU,OAAM,EAAAA,EAAAjC,WAA6C,IAA/BiC,EAAKjC,IAAI,GAAGiC,EAAKN,KAAKG,OAC5CG,EAAKjC,SAAM,GAGfiC,EAAKjC,IAAI,GAAGiC,EAAKN,KAAKG,KAAOD,GAUzBK,EAAU,CAACzB,EAAQQ,KACjB,MAAAjB,IACJA,EAAA2B,EACAA,GACEX,EAAcP,EAAQQ,GACtB,GAACjB,GACAuB,OAAOC,UAAUC,eAAeC,KAAK1B,EAAK2B,GAC/C,OAAO3B,EAAI2B,IASPQ,EAAa,CAACC,EAAQC,EAAQC,KAClC,IAAA,MAAWC,KAAQF,EACJ,cAATE,GAAiC,gBAATA,IACtBA,KAAQH,EACNrC,EAASqC,EAAOG,KAAUH,EAAOG,aAAiBC,QAAUzC,EAASsC,EAAOE,KAAUF,EAAOE,aAAiBC,OAC5GF,IAAWF,EAAOG,GAAQF,EAAOE,IAErCJ,EAAWC,EAAOG,GAAOF,EAAOE,GAAOD,GAGlCF,EAAAG,GAAQF,EAAOE,IAIrB,OAAAH,GAEHK,EAAcC,GAAOA,EAAI5B,QAAQ,sCAAuC,QAC9E,IAAI6B,EAAa,CACf,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,UAEP,MAAMC,EAAiBC,GACjB9C,EAAS8C,GACJA,EAAK/B,QAAQ,cAAmBgC,GAAAH,EAAWG,KAE7CD,EAsBT,MAAME,EAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,KAC7BC,EAAiC,IArBvC,MACE,WAAAC,CAAYC,GACVC,KAAKD,SAAWA,EACXC,KAAAC,cAAgBC,IACrBF,KAAKG,YAAc,EACpB,CACD,SAAAC,CAAUC,GACR,MAAMC,EAAkBN,KAAKC,UAAUM,IAAIF,GAC3C,QAAwB,IAApBC,EACK,OAAAA,EAEH,MAAAE,EAAY,IAAIC,OAAOJ,GAMtB,OALHL,KAAKG,YAAYhC,SAAW6B,KAAKD,UACnCC,KAAKC,UAAUS,OAAOV,KAAKG,YAAYQ,SAEpCX,KAAAC,UAAUW,IAAIP,EAASG,GACvBR,KAAAG,YAAYU,KAAKR,GACfG,CACR,GAGoD,IAgBjDM,EAAW,CAACjE,EAAKiB,EAAMiD,EAAe,OACtC,IAAClE,EAAY,OACb,GAAAA,EAAIiB,GAAO,CACT,IAACM,OAAOC,UAAUC,eAAeC,KAAK1B,EAAKiB,GAAc,OAC7D,OAAOjB,EAAIiB,EACZ,CACK,MAAAkD,EAASlD,EAAKG,MAAM8C,GAC1B,IAAIE,EAAUpE,EACd,IAAA,IAASqE,EAAI,EAAGA,EAAIF,EAAO7C,QAAS,CAClC,IAAK8C,GAA8B,iBAAZA,EACd,OAEL,IAAAE,EACAC,EAAW,GACf,IAAA,IAASC,EAAIH,EAAGG,EAAIL,EAAO7C,SAAUkD,EAMnC,GALIA,IAAMH,IACIE,GAAAL,GAEdK,GAAYJ,EAAOK,GACnBF,EAAOF,EAAQG,QACF,IAATD,EAAoB,CACtB,GAAI,CAAC,SAAU,SAAU,WAAWzD,eAAeyD,IAAQ,GAAME,EAAIL,EAAO7C,OAAS,EACnF,SAEF+C,GAAKG,EAAIH,EAAI,EACb,KACD,CAEOD,EAAAE,CACX,CACM,OAAAF,GAEHK,EAAiBC,GAAc,MAANA,OAAM,EAAAA,EAAA5D,QAAQ,IAAK,KAE5C6D,EAAgB,CACpBC,KAAM,SACN,GAAAC,CAAIC,GACG3B,KAAA4B,OAAO,MAAOD,EACpB,EACD,IAAAE,CAAKF,GACE3B,KAAA4B,OAAO,OAAQD,EACrB,EACD,KAAAG,CAAMH,GACC3B,KAAA4B,OAAO,QAASD,EACtB,EACD,MAAAC,CAAOH,EAAME,GA3Mf,IAAAI,EAAAC,EA4MI,OAAAA,EAAA,OAAAD,EAAA,MAAAE,aAAA,EAAAA,QAAUR,SAAV,EAAAM,EAAiBG,QAAjBF,EAAAzD,KAAAwD,EAAyBE,QAASN,EACnC,GAEH,MAAMQ,EACJ,WAAArC,CAAYsC,EAAgBC,EAAU,IAC/BrC,KAAAsC,KAAKF,EAAgBC,EAC3B,CACD,IAAAC,CAAKF,EAAgBC,EAAU,IACxBrC,KAAAuC,OAASF,EAAQE,QAAU,WAChCvC,KAAKwC,OAASJ,GAAkBZ,EAChCxB,KAAKqC,QAAUA,EACfrC,KAAKyC,MAAQJ,EAAQI,KACtB,CACD,GAAAf,IAAOC,GACL,OAAO3B,KAAK0C,QAAQf,EAAM,MAAO,IAAI,EACtC,CACD,IAAAE,IAAQF,GACN,OAAO3B,KAAK0C,QAAQf,EAAM,OAAQ,IAAI,EACvC,CACD,KAAAG,IAASH,GACP,OAAO3B,KAAK0C,QAAQf,EAAM,QAAS,GACpC,CACD,SAAAgB,IAAahB,GACX,OAAO3B,KAAK0C,QAAQf,EAAM,OAAQ,wBAAwB,EAC3D,CACD,OAAAe,CAAQf,EAAMiB,EAAKL,EAAQM,GACzB,OAAIA,IAAc7C,KAAKyC,MAAc,MACjC7F,EAAS+E,EAAK,QAAU,GAAK,GAAGY,IAASvC,KAAKuC,UAAUZ,EAAK,MAC1D3B,KAAKwC,OAAOI,GAAKjB,GACzB,CACD,MAAAmB,CAAOC,GACE,OAAA,IAAIZ,EAAOnC,KAAKwC,OAAQ,CAE3BD,OAAQ,GAAGvC,KAAKuC,UAAUQ,QAEzB/C,KAAKqC,SAEX,CACD,KAAAW,CAAMX,GAGJ,OAFAA,EAAUA,GAAWrC,KAAKqC,SAClBE,OAASF,EAAQE,QAAUvC,KAAKuC,OACjC,IAAIJ,EAAOnC,KAAKwC,OAAQH,EAChC,EAEH,IAAIY,EAAa,IAAId,EAErB,MAAMe,EACJ,WAAApD,GACEE,KAAKmD,UAAY,EAClB,CACD,EAAAC,CAAGC,EAAQC,GAMF,OALPD,EAAOpF,MAAM,KAAKsF,SAAiBC,IAC5BxD,KAAKmD,UAAUK,UAAaL,UAAUK,GAAS,IAAItD,KACxD,MAAMuD,EAAezD,KAAKmD,UAAUK,GAAOjD,IAAI+C,IAAa,EAC5DtD,KAAKmD,UAAUK,GAAO5C,IAAI0C,EAAUG,EAAe,MAE9CzD,IACR,CACD,GAAA0D,CAAIF,EAAOF,GACJtD,KAAKmD,UAAUK,KACfF,EAILtD,KAAKmD,UAAUK,GAAO9C,OAAO4C,UAHpBtD,KAAKmD,UAAUK,GAIzB,CACD,IAAAG,CAAKH,KAAU7B,GACT,GAAA3B,KAAKmD,UAAUK,GAAQ,CACVI,MAAMC,KAAK7D,KAAKmD,UAAUK,GAAOM,WACzCP,SAAQ,EAAEQ,EAAUC,MACzB,IAAA,IAAS9C,EAAI,EAAGA,EAAI8C,EAAe9C,IACjC6C,KAAYpC,KAGjB,CACG,GAAA3B,KAAKmD,UAAU,KAAM,CACRS,MAAMC,KAAK7D,KAAKmD,UAAU,KAAKW,WACvCP,SAAQ,EAAEQ,EAAUC,MACzB,IAAA,IAAS9C,EAAI,EAAGA,EAAI8C,EAAe9C,IACjC6C,EAAS7B,MAAM6B,EAAU,CAACP,KAAU7B,MAGzC,CACF,EAGH,MAAMsC,UAAsBf,EAC1B,WAAApD,CAAYJ,EAAM2C,EAAU,CAC1B6B,GAAI,CAAC,eACLC,UAAW,wBAGNnE,KAAAN,KAAOA,GAAQ,GACpBM,KAAKqC,QAAUA,OACmB,IAA9BrC,KAAKqC,QAAQtB,eACff,KAAKqC,QAAQtB,aAAe,UAEW,IAArCf,KAAKqC,QAAQ+B,sBACfpE,KAAKqC,QAAQ+B,qBAAsB,EAEtC,CACD,aAAAC,CAAcH,GACRlE,KAAKqC,QAAQ6B,GAAGxG,QAAQwG,GAAM,GAC3BlE,KAAAqC,QAAQ6B,GAAGrD,KAAKqD,EAExB,CACD,gBAAAI,CAAiBJ,GACf,MAAMK,EAAQvE,KAAKqC,QAAQ6B,GAAGxG,QAAQwG,GAClCK,GAAY,GACdvE,KAAKqC,QAAQ6B,GAAGM,OAAOD,EAAO,EAEjC,CACD,WAAAE,CAAYC,EAAKR,EAAIzG,EAAK4E,EAAU,CAAA,GA5TtC,IAAAN,EAAAC,EA6TI,MAAMjB,OAAwC,IAAzBsB,EAAQtB,aAA6BsB,EAAQtB,aAAef,KAAKqC,QAAQtB,aACxFqD,OAAsD,IAAhC/B,EAAQ+B,oBAAoC/B,EAAQ+B,oBAAsBpE,KAAKqC,QAAQ+B,oBAC/G,IAAAtG,EACA4G,EAAIhH,QAAQ,MAAW,EAClBI,EAAA4G,EAAIzG,MAAM,MAEVH,EAAA,CAAC4G,EAAKR,GACTzG,IACEmG,MAAMe,QAAQlH,GACXK,EAAA+C,QAAQpD,GACJb,EAASa,IAAQsD,EAC1BjD,EAAK+C,QAAQpD,EAAIQ,MAAM8C,IAEvBjD,EAAK+C,KAAKpD,KAIhB,MAAMmH,EAAS7F,EAAQiB,KAAKN,KAAM5B,GAMlC,OALK8G,IAAWV,IAAOzG,GAAOiH,EAAIhH,QAAQ,MAAW,IACnDgH,EAAM5G,EAAK,GACXoG,EAAKpG,EAAK,GACVL,EAAMK,EAAKe,MAAM,GAAGgG,KAAK,OAEvBD,GAAWR,GAAwBxH,EAASa,GACzCqD,EAAS,OAAAkB,EAAA,cAAKtC,WAAL,EAAAqC,EAAY2C,SAAO,EAAA1C,EAAAkC,GAAKzG,EAAKsD,GADgB6D,CAE9D,CACD,WAAAE,CAAYJ,EAAKR,EAAIzG,EAAKsH,EAAO1C,EAAU,CACzC2C,QAAQ,IAER,MAAMjE,OAAwC,IAAzBsB,EAAQtB,aAA6BsB,EAAQtB,aAAef,KAAKqC,QAAQtB,aAC1F,IAAAjD,EAAO,CAAC4G,EAAKR,GACbzG,MAAYK,EAAKmH,OAAOlE,EAAetD,EAAIQ,MAAM8C,GAAgBtD,IACjEiH,EAAIhH,QAAQ,MAAW,IAClBI,EAAA4G,EAAIzG,MAAM,KACT8G,EAAAb,EACRA,EAAKpG,EAAK,IAEZkC,KAAKqE,cAAcH,GACXzF,EAAAuB,KAAKN,KAAM5B,EAAMiH,GACpB1C,EAAQ2C,QAAQhF,KAAK2D,KAAK,QAASe,EAAKR,EAAIzG,EAAKsH,EACvD,CACD,YAAAG,CAAaR,EAAKR,EAAIiB,EAAW9C,EAAU,CACzC2C,QAAQ,IAER,IAAA,MAAWI,KAAKD,GACVvI,EAASuI,EAAUC,KAAOxB,MAAMe,QAAQQ,EAAUC,WAAUN,YAAYJ,EAAKR,EAAIkB,EAAGD,EAAUC,GAAI,CACpGJ,QAAQ,IAGP3C,EAAQ2C,QAAQhF,KAAK2D,KAAK,QAASe,EAAKR,EAAIiB,EAClD,CACD,iBAAAE,CAAkBX,EAAKR,EAAIiB,EAAWG,EAAMnG,EAAWkD,EAAU,CAC/D2C,QAAQ,EACRO,UAAU,IAEN,IAAAzH,EAAO,CAAC4G,EAAKR,GACbQ,EAAIhH,QAAQ,MAAW,IAClBI,EAAA4G,EAAIzG,MAAM,KACVqH,EAAAH,EACKA,EAAAjB,EACZA,EAAKpG,EAAK,IAEZkC,KAAKqE,cAAcH,GACnB,IAAIsB,EAAOzG,EAAQiB,KAAKN,KAAM5B,IAAS,GAClCuE,EAAQkD,WAAUJ,EAAYM,KAAKC,MAAMD,KAAKE,UAAUR,KACzDG,EACStG,EAAAwG,EAAML,EAAWhG,GAErBqG,EAAA,IACFA,KACAL,GAGC1G,EAAAuB,KAAKN,KAAM5B,EAAM0H,GACpBnD,EAAQ2C,QAAQhF,KAAK2D,KAAK,QAASe,EAAKR,EAAIiB,EAClD,CACD,oBAAAS,CAAqBlB,EAAKR,GACpBlE,KAAK6F,kBAAkBnB,EAAKR,WACvBlE,KAAKN,KAAKgF,GAAKR,GAExBlE,KAAKsE,iBAAiBJ,GACjBlE,KAAA2D,KAAK,UAAWe,EAAKR,EAC3B,CACD,iBAAA2B,CAAkBnB,EAAKR,GACrB,YAAqC,IAA9BlE,KAAKyE,YAAYC,EAAKR,EAC9B,CACD,iBAAA4B,CAAkBpB,EAAKR,GAEd,OADFA,IAASA,EAAAlE,KAAKqC,QAAQ8B,WACpBnE,KAAKyE,YAAYC,EAAKR,EAC9B,CACD,iBAAA6B,CAAkBrB,GACT,OAAA1E,KAAKN,KAAKgF,EAClB,CACD,2BAAAsB,CAA4BtB,GACpB,MAAAhF,EAAOM,KAAK+F,kBAAkBrB,GAEpC,SADUhF,GAAQtB,OAAO6H,KAAKvG,IAAS,IAC5BwG,SAAUxG,EAAKyG,IAAM/H,OAAO6H,KAAKvG,EAAKyG,IAAIhI,OAAS,GAC/D,CACD,MAAAiI,GACE,OAAOpG,KAAKN,IACb,EAGH,IAAI2G,EAAgB,CAClBC,WAAY,CAAE,EACd,gBAAAC,CAAiBC,GACVxG,KAAAsG,WAAWE,EAAOC,MAAQD,CAChC,EACD,MAAAE,CAAOJ,EAAYvB,EAAOtH,EAAK4E,EAASsE,GAI/B,OAHPL,EAAW/C,SAAqBqD,IA1apC,IAAA7E,EA2acgD,GAAA,OAAAhD,EAAA/B,KAAKsG,WAAWM,aAAYC,QAAQ9B,EAAOtH,EAAK4E,EAASsE,KAAe5B,KAE3EA,CACR,GAGH,MAAM+B,EAAmB,CAAA,EACnBC,EAA8BhK,IAACH,EAASG,IAAuB,kBAARA,GAAoC,iBAARA,EACzF,MAAMiK,UAAmB9D,EACvB,WAAApD,CAAYmH,EAAU5E,EAAU,IAparB,IAAI1C,EAAGuH,UAAHvH,EAsayGsH,EAtatGC,EAsagHlH,KAA3H,CAAC,gBAAiB,gBAAiB,iBAAkB,eAAgB,mBAAoB,aAAc,SAra5GuD,SAAa6B,IACTzF,EAAEyF,OAAMA,GAAKzF,EAAEyF,OAqanBpF,KAAKqC,QAAUA,OACmB,IAA9BrC,KAAKqC,QAAQtB,eACff,KAAKqC,QAAQtB,aAAe,KAEzBf,KAAAwC,OAASS,EAAWH,OAAO,aACjC,CACD,cAAAqE,CAAezC,GACTA,SAAU0C,SAAW1C,EAC1B,CACD,MAAA2C,CAAO5J,EAAK6J,EAAI,CACdC,cAAe,CAAE,IAEjB,MAAMC,EAAM,IACPF,GAED,GAAO,MAAP7J,EAAoB,OAAA,EACxB,MAAMgK,EAAWzH,KAAK7C,QAAQM,EAAK+J,GACnC,YAAyB,WAAlBC,WAAU1K,IAClB,CACD,cAAA2K,CAAejK,EAAK+J,GAClB,IAAIG,OAAkC,IAApBH,EAAIG,YAA4BH,EAAIG,YAAc3H,KAAKqC,QAAQsF,iBAC7D,IAAhBA,IAAyCA,EAAA,KAC7C,MAAM5G,OAAoC,IAArByG,EAAIzG,aAA6ByG,EAAIzG,aAAef,KAAKqC,QAAQtB,aACtF,IAAI6G,EAAaJ,EAAItD,IAAMlE,KAAKqC,QAAQ8B,WAAa,GACrD,MAAM0D,EAAuBF,GAAelK,EAAIC,QAAQiK,IAAe,EACjEG,IAAwB9H,KAAKqC,QAAQ0F,yBAA4BP,EAAIzG,cAAiBf,KAAKqC,QAAQ2F,wBAA2BR,EAAIG,aAjUhH,EAAClK,EAAKkK,EAAa5G,KAC7C4G,EAAcA,GAAe,GAC7B5G,EAAeA,GAAgB,GAC/B,MAAMkH,EAAgBrI,EAAMsI,QAAOC,GAAKR,EAAYjK,QAAQyK,GAAK,GAAKpH,EAAarD,QAAQyK,GAAK,IAC5F,GAAyB,IAAzBF,EAAc9J,OAAqB,OAAA,EACvC,MAAMiK,EAAIvI,EAA+BO,UAAU,IAAI6H,EAAcI,KAAIF,GAAW,MAANA,EAAY,MAAQA,IAAGtD,KAAK,SAC1G,IAAIyD,GAAWF,EAAEG,KAAK9K,GACtB,IAAK6K,EAAS,CACN,MAAAE,EAAK/K,EAAIC,QAAQqD,GACnByH,EAAK,IAAMJ,EAAEG,KAAK9K,EAAIgL,UAAU,EAAGD,MAC3BF,GAAA,EAEb,CACM,OAAAA,GAoTmJI,CAAoBjL,EAAKkK,EAAa5G,IAC1L,GAAA8G,IAAyBC,EAAsB,CACjD,MAAM1C,EAAI3H,EAAIkL,MAAM3I,KAAK4I,aAAaC,eAClC,GAAAzD,GAAKA,EAAEjH,OAAS,EACX,MAAA,CACLV,MACAmK,WAAYhL,EAASgL,GAAc,CAACA,GAAcA,GAGhD,MAAAkB,EAAQrL,EAAIQ,MAAM0J,IACpBA,IAAgB5G,GAAgB4G,IAAgB5G,GAAgBf,KAAKqC,QAAQ6B,GAAGxG,QAAQoL,EAAM,KAAU,KAAAlB,EAAakB,EAAMnI,SACzHlD,EAAAqL,EAAMjE,KAAK9D,EAClB,CACM,MAAA,CACLtD,MACAmK,WAAYhL,EAASgL,GAAc,CAACA,GAAcA,EAErD,CACD,SAAAmB,CAAU9C,EAAMqB,EAAG0B,GACb,IAAAxB,EAAmB,iBAANF,EAAiB,IAC7BA,GACDA,EAQA,GAPe,iBAARE,GAAoBxH,KAAKqC,QAAQ4G,mCACpCzB,EAAAxH,KAAKqC,QAAQ4G,iCAAiCC,YAE/B,iBAAZ7G,UAA4BmF,EAAA,IAClCA,IAEAA,IAAKA,EAAM,IACJ,MAARvB,EAAqB,MAAA,GACpBrC,MAAMe,QAAQsB,KAAcA,EAAA,CAAC5G,OAAO4G,KACzC,MAAMkD,OAAsC,IAAtB3B,EAAI2B,cAA8B3B,EAAI2B,cAAgBnJ,KAAKqC,QAAQ8G,cACnFpI,OAAoC,IAArByG,EAAIzG,aAA6ByG,EAAIzG,aAAef,KAAKqC,QAAQtB,cAChFtD,IACJA,EAAAmK,WACAA,GACE5H,KAAK0H,eAAezB,EAAKA,EAAK9H,OAAS,GAAIqJ,GACzC4B,EAAYxB,EAAWA,EAAWzJ,OAAS,GACjD,IAAIwJ,OAAkC,IAApBH,EAAIG,YAA4BH,EAAIG,YAAc3H,KAAKqC,QAAQsF,iBAC7D,IAAhBA,IAAyCA,EAAA,KACvC,MAAAjD,EAAM8C,EAAI9C,KAAO1E,KAAKoH,SACtBiC,EAA0B7B,EAAI6B,yBAA2BrJ,KAAKqC,QAAQgH,wBACxE,GAAuB,YAAvB,MAAA3E,OAAA,EAAAA,EAAK4E,eACP,OAAID,EACEF,EACK,CACLpM,IAAK,GAAGqM,IAAYzB,IAAclK,IAClC8L,QAAS9L,EACT+L,aAAc/L,EACdgM,QAAS/E,EACTgF,OAAQN,EACRO,WAAY3J,KAAK4J,qBAAqBpC,IAGnC,GAAG4B,IAAYzB,IAAclK,IAElC0L,EACK,CACLpM,IAAKU,EACL8L,QAAS9L,EACT+L,aAAc/L,EACdgM,QAAS/E,EACTgF,OAAQN,EACRO,WAAY3J,KAAK4J,qBAAqBpC,IAGnC/J,EAET,MAAMgK,EAAWzH,KAAK7C,QAAQ8I,EAAMuB,GACpC,IAAIzK,EAAgB,MAAV0K,OAAU,EAAAA,EAAA1K,IACd,MAAA8M,SAAapC,WAAU8B,UAAW9L,EAClCqM,SAAkBrC,WAAU+B,eAAgB/L,EAE5CsM,OAAgC,IAAnBvC,EAAIuC,WAA2BvC,EAAIuC,WAAa/J,KAAKqC,QAAQ0H,WAC1EC,GAA8BhK,KAAKiK,YAAcjK,KAAKiK,WAAWC,eACjEC,OAAoC,IAAd3C,EAAI4C,QAAwBxN,EAAS4K,EAAI4C,OAC/DC,EAAkBrD,EAAWqD,gBAAgB7C,GAC7C8C,EAAqBH,EAAsBnK,KAAKuK,eAAeC,UAAU9F,EAAK8C,EAAI4C,MAAO5C,GAAO,GAChGiD,EAAoCjD,EAAIkD,SAAWP,EAAsBnK,KAAKuK,eAAeC,UAAU9F,EAAK8C,EAAI4C,MAAO,CAC3HM,SAAS,IACN,GACCC,EAAwBR,IAAwB3C,EAAIkD,SAAyB,IAAdlD,EAAI4C,MACnEQ,EAAeD,GAAyBnD,EAAI,eAAexH,KAAKqC,QAAQwI,wBAA0BrD,EAAI,eAAe8C,MAAyB9C,EAAI,eAAeiD,MAAwCjD,EAAIoD,aACnN,IAAIE,EAAgB/N,EAChBiN,IAA+BjN,GAAOsN,IACxBS,EAAAF,GAEZ,MAAAV,EAAiBnD,EAAqB+D,GACtCC,EAAU3M,OAAOC,UAAU2M,SAAS9I,MAAM4I,GAChD,KAAId,GAA8Bc,GAAiBZ,GAjBlC,CAAC,kBAAmB,oBAAqB,mBAiBoBxM,QAAQqN,GAAW,IAAOnO,EAASmN,IAAenG,MAAMe,QAAQmG,GA8ClJ,GAAed,GAA8BpN,EAASmN,IAAenG,MAAMe,QAAQ5H,GACvEA,EAAAA,EAAI8H,KAAKkF,GACXhN,IAAWA,EAAAiD,KAAKiL,kBAAkBlO,EAAKkJ,EAAMuB,EAAKwB,QACjD,CACL,IAAIkC,GAAc,EACd3B,GAAU,GACTvJ,KAAKmL,cAAcpO,IAAQsN,IAChBa,GAAA,EACRnO,EAAA6N,GAEH5K,KAAKmL,cAAcpO,KACZwM,GAAA,EACJxM,EAAAU,GAER,MACM2N,GADiC5D,EAAI6D,gCAAkCrL,KAAKqC,QAAQgJ,iCAClC9B,OAAU,EAAYxM,EACxEuO,EAAgBjB,GAAmBO,IAAiB7N,GAAOiD,KAAKqC,QAAQiJ,cAC1E,GAAA/B,GAAW2B,GAAeI,EAAe,CAE3C,GADKtL,KAAAwC,OAAOd,IAAI4J,EAAgB,YAAc,aAAc5G,EAAK0E,EAAW3L,EAAK6N,EAAgBV,EAAe7N,GAC5GgE,EAAc,CACV,MAAAwK,EAAKvL,KAAK7C,QAAQM,EAAK,IACxB+J,EACHzG,cAAc,IAEZwK,GAAMA,EAAGxO,KAAUiD,KAAAwC,OAAOX,KAAK,kLACpC,CACD,IAAI2J,EAAO,GACL,MAAAC,EAAezL,KAAK0L,cAAcC,iBAAiB3L,KAAKqC,QAAQuJ,YAAapE,EAAI9C,KAAO1E,KAAKoH,UACnG,GAAmC,aAA/BpH,KAAKqC,QAAQwJ,eAAgCJ,GAAgBA,EAAa,GAC5E,IAAA,IAASvK,EAAI,EAAGA,EAAIuK,EAAatN,OAAQ+C,IAClCsK,EAAA3K,KAAK4K,EAAavK,QAEe,QAA/BlB,KAAKqC,QAAQwJ,cACtBL,EAAOxL,KAAK0L,cAAcI,mBAAmBtE,EAAI9C,KAAO1E,KAAKoH,UAE7DoE,EAAK3K,KAAK2G,EAAI9C,KAAO1E,KAAKoH,UAE5B,MAAM2E,EAAO,CAACC,EAAGxN,EAAGyN,KA5nB5B,IAAAlK,EA6nBU,MAAMmK,EAAoB7B,GAAmB4B,IAAyBlP,EAAMkP,EAAuBb,EAC/FpL,KAAKqC,QAAQ8J,kBACfnM,KAAKqC,QAAQ8J,kBAAkBH,EAAG5C,EAAW5K,EAAG0N,EAAmBZ,EAAe9D,IACzE,OAAAzF,EAAA/B,KAAKoM,uBAAL,EAAArK,EAAuBsK,cAChCrM,KAAKoM,iBAAiBC,YAAYL,EAAG5C,EAAW5K,EAAG0N,EAAmBZ,EAAe9D,GAEvFxH,KAAK2D,KAAK,aAAcqI,EAAG5C,EAAW5K,EAAGzB,IAEvCiD,KAAKqC,QAAQgK,cACXrM,KAAKqC,QAAQiK,oBAAsBnC,EACrCqB,EAAKjI,SAAoB6D,IACvB,MAAMmF,EAAWvM,KAAKuK,eAAeiC,YAAYpF,EAAUI,GACvDmD,GAAyBnD,EAAI,eAAexH,KAAKqC,QAAQwI,wBAA0B0B,EAAS7O,QAAQ,GAAGsC,KAAKqC,QAAQwI,uBAAyB,GAC/I0B,EAAS1L,KAAK,GAAGb,KAAKqC,QAAQwI,uBAEhC0B,EAAShJ,SAAkBkJ,IACpBV,EAAA,CAAC3E,GAAW3J,EAAMgP,EAAQjF,EAAI,eAAeiF,MAAa7B,SAI9DmB,EAAAP,EAAM/N,EAAKmN,GAGrB,CACD7N,EAAMiD,KAAKiL,kBAAkBlO,EAAKkJ,EAAMuB,EAAKC,EAAUuB,GACnDO,GAAWxM,IAAQU,GAAOuC,KAAKqC,QAAQqK,8BACzC3P,EAAM,GAAGqM,IAAYzB,IAAclK,MAEhC8L,GAAW2B,IAAgBlL,KAAKqC,QAAQsK,yBAC3C5P,EAAMiD,KAAKqC,QAAQsK,uBAAuB3M,KAAKqC,QAAQqK,4BAA8B,GAAGtD,IAAYzB,IAAclK,IAAQA,EAAKyN,EAAcnO,OAAM,EAAWyK,GAEjK,KAnH8J,CAC7J,IAAKA,EAAIoF,gBAAkB5M,KAAKqC,QAAQuK,cAAe,CAChD5M,KAAKqC,QAAQwK,uBACX7M,KAAAwC,OAAOX,KAAK,mEAEb,MAAAuG,EAAIpI,KAAKqC,QAAQwK,sBAAwB7M,KAAKqC,QAAQwK,sBAAsBhD,EAAYiB,EAAe,IACxGtD,EACHtD,GAAI0D,IACD,QAAQnK,MAAQuC,KAAKoH,mDAC1B,OAAI+B,GACF1B,EAAS1K,IAAMqL,EACNX,EAAAkC,WAAa3J,KAAK4J,qBAAqBpC,GACzCC,GAEFW,CACR,CACD,GAAIrH,EAAc,CACV,MAAA+L,EAAiBlJ,MAAMe,QAAQmG,GAC/BiC,EAAOD,EAAiB,GAAK,GAC7BE,EAAcF,EAAiBhD,EAAkBD,EACvD,IAAA,MAAWzE,KAAK0F,EACd,GAAI1M,OAAOC,UAAUC,eAAeC,KAAKuM,EAAe1F,GAAI,CAC1D,MAAM6H,EAAU,GAAGD,IAAcjM,IAAeqE,IAE9C2H,EAAK3H,GADHiF,IAAoBtN,EACZiD,KAAK+I,UAAUkE,EAAS,IAC7BzF,EACHoD,aAAc7D,EAAqB6D,GAAgBA,EAAaxF,QAAK,EAEnE2E,YAAY,EACZ7F,GAAI0D,IAIE5H,KAAK+I,UAAUkE,EAAS,IAC7BzF,EAEDuC,YAAY,EACZ7F,GAAI0D,IAINmF,EAAK3H,KAAO6H,IAASF,EAAK3H,GAAK0F,EAAc1F,GAClD,CAEG2H,EAAAA,CACP,CACP,CAsEI,OAAI5D,GACF1B,EAAS1K,IAAMA,EACN0K,EAAAkC,WAAa3J,KAAK4J,qBAAqBpC,GACzCC,GAEF1K,CACR,CACD,iBAAAkO,CAAkBlO,EAAKU,EAAK+J,EAAKC,EAAUuB,GApqB7C,IAAAjH,EAAAC,EAqqBQ,GAAA,OAAAD,EAAA/B,KAAKiK,iBAAL,EAAAlI,EAAiB2D,MACb3I,EAAAiD,KAAKiK,WAAWvE,MAAM3I,EAAK,IAC5BiD,KAAKqC,QAAQkF,cAAc2F,oBAC3B1F,GACFA,EAAI9C,KAAO1E,KAAKoH,UAAYK,EAASgC,QAAShC,EAASiC,OAAQjC,EAAS8B,QAAS,CAClF9B,kBAER,IAAgBD,EAAI2F,kBAAmB,CAC7B3F,EAAID,eAAoBvH,KAAA4I,aAAatG,KAAK,IACzCkF,EAEDD,cAAe,IACVvH,KAAKqC,QAAQkF,iBACbC,EAAID,iBAIb,MAAM6F,EAAkBxQ,EAASG,UAAiD,KAAxC,OAAAiF,mBAAKuF,oBAAL,EAAAvF,EAAoBoL,iBAAgC5F,EAAID,cAAc6F,gBAAkBpN,KAAKqC,QAAQkF,cAAc6F,iBACzJ,IAAAC,EACJ,GAAID,EAAiB,CACnB,MAAME,EAAKvQ,EAAI4L,MAAM3I,KAAK4I,aAAaC,eACvCwE,EAAUC,GAAMA,EAAGnP,MACpB,CACG,IAAAuB,EAAO8H,EAAI7J,UAAYf,EAAS4K,EAAI7J,SAAW6J,EAAI7J,QAAU6J,EAMjE,GALIxH,KAAKqC,QAAQkF,cAAc2F,mBAAyBxN,EAAA,IACnDM,KAAKqC,QAAQkF,cAAc2F,oBAC3BxN,IAEC3C,EAAAiD,KAAK4I,aAAa2E,YAAYxQ,EAAK2C,EAAM8H,EAAI9C,KAAO1E,KAAKoH,UAAYK,EAASgC,QAASjC,GACzF4F,EAAiB,CACnB,MAAMI,EAAKzQ,EAAI4L,MAAM3I,KAAK4I,aAAaC,eAEnCwE,GADYG,GAAMA,EAAGrP,UACFqJ,EAAIiG,MAAO,EACnC,EACIjG,EAAI9C,KAAO+C,GAAYA,EAAS1K,MAASyK,EAAA9C,IAAM1E,KAAKoH,UAAYK,EAASgC,UAC7D,IAAbjC,EAAIiG,OAAgB1Q,EAAMiD,KAAK4I,aAAa6E,KAAK1Q,GAAK,IAAI4E,WACxDqH,WAAU,MAAOrH,EAAK,IAAO6F,EAAIkG,QAI9B1N,KAAK+I,aAAapH,EAAMlE,IAHxBuC,KAAAwC,OAAOX,KAAK,6CAA6CF,EAAK,cAAclE,EAAI,MAC9E,OAGR+J,IACCA,EAAID,eAAoBvH,KAAA4I,aAAa+E,OAC1C,CACD,MAAMC,EAAcpG,EAAIoG,aAAe5N,KAAKqC,QAAQuL,YAC9CC,EAAqBjR,EAASgR,GAAe,CAACA,GAAeA,EAU5D,OATI,MAAP7Q,IAAe,MAAA8Q,OAAA,EAAAA,EAAoB1P,UAAqC,IAA3BqJ,EAAIsG,qBAC7C/Q,EAAAsJ,EAAcK,OAAOmH,EAAoB9Q,EAAKU,EAAKuC,KAAKqC,SAAWrC,KAAKqC,QAAQ0L,wBAA0B,CAC9GC,aAAc,IACTvG,EACHkC,WAAY3J,KAAK4J,qBAAqBpC,OAErCA,GACDA,EAAKxH,OAEJjD,CACR,CACD,OAAAI,CAAQ8I,EAAMuB,EAAM,IACd,IAAAyG,EACA1E,EACAC,EACAC,EACAC,EAgEG,OA/DH9M,EAASqJ,KAAOA,EAAO,CAACA,IAC5BA,EAAK1C,SAAa/E,IACZ,GAAAwB,KAAKmL,cAAc8C,GAAQ,OAC/B,MAAMC,EAAYlO,KAAK0H,eAAelJ,EAAGgJ,GACnC/J,EAAMyQ,EAAUzQ,IACZ8L,EAAA9L,EACV,IAAImK,EAAasG,EAAUtG,WACvB5H,KAAKqC,QAAQ8L,aAAYvG,EAAaA,EAAW3C,OAAOjF,KAAKqC,QAAQ8L,aACzE,MAAMhE,OAAoC,IAAd3C,EAAI4C,QAAwBxN,EAAS4K,EAAI4C,OAC/DO,EAAwBR,IAAwB3C,EAAIkD,SAAyB,IAAdlD,EAAI4C,MACnEgE,OAAuC,IAAhB5G,EAAIkG,UAA0B9Q,EAAS4K,EAAIkG,UAAmC,iBAAhBlG,EAAIkG,UAAyC,KAAhBlG,EAAIkG,QACtHW,EAAQ7G,EAAIgE,KAAOhE,EAAIgE,KAAOxL,KAAK0L,cAAcI,mBAAmBtE,EAAI9C,KAAO1E,KAAKoH,SAAUI,EAAIoE,aACxGhE,EAAWrE,SAAcW,IAhvB/B,IAAAnC,EAAAC,EAivBYhC,KAAKmL,cAAc8C,KACdvE,EAAAxF,EACJ4C,EAAiB,GAAGuH,EAAM,MAAMnK,QAAS,OAAAnC,EAAK/B,KAAAsO,gBAAOC,sBAAuB,OAAAvM,OAAKsM,YAAL,EAAAtM,EAAYuM,mBAAmB7E,MAC9G5C,EAAiB,GAAGuH,EAAM,MAAMnK,MAAQ,EACxClE,KAAKwC,OAAOX,KAAK,QAAQ0H,qBAA2B8E,EAAMxJ,KAAK,2CAA2C6E,wBAA8B,6NAE1I2E,EAAM9K,SAAgBhC,IAvvB9BQ,IAAAA,EAwvBc,GAAA/B,KAAKmL,cAAc8C,GAAQ,OACrBxE,EAAAlI,EACJ,MAAAiN,EAAY,CAAC/Q,GACnB,GAAI,OAAAsE,EAAA/B,KAAKiK,iBAAL,EAAAlI,EAAiB0M,cACnBzO,KAAKiK,WAAWwE,cAAcD,EAAW/Q,EAAK8D,EAAM2C,EAAIsD,OACnD,CACD,IAAAkH,EACAvE,MAAoCnK,KAAKuK,eAAeC,UAAUjJ,EAAMiG,EAAI4C,MAAO5C,IACvF,MAAMmH,EAAa,GAAG3O,KAAKqC,QAAQwI,sBAC7B+D,EAAgB,GAAG5O,KAAKqC,QAAQwI,yBAAyB7K,KAAKqC,QAAQwI,kBAU5E,GATIV,IACQqE,EAAA3N,KAAKpD,EAAMiR,GACjBlH,EAAIkD,SAAmD,IAAxCgE,EAAahR,QAAQkR,IAC5BJ,EAAA3N,KAAKpD,EAAMiR,EAAa/Q,QAAQiR,EAAe5O,KAAKqC,QAAQwI,kBAEpEF,GACQ6D,EAAA3N,KAAKpD,EAAMkR,IAGrBP,EAAsB,CAClB,MAAAS,EAAa,GAAGpR,IAAMuC,KAAKqC,QAAQyM,mBAAmBtH,EAAIkG,UAChEc,EAAU3N,KAAKgO,GACX1E,IACQqE,EAAA3N,KAAKgO,EAAaH,GACxBlH,EAAIkD,SAAmD,IAAxCgE,EAAahR,QAAQkR,IAC5BJ,EAAA3N,KAAKgO,EAAaH,EAAa/Q,QAAQiR,EAAe5O,KAAKqC,QAAQwI,kBAE3EF,GACQ6D,EAAA3N,KAAKgO,EAAaF,GAGjC,CACF,CACG,IAAAI,EACG,KAAAA,EAAcP,EAAUQ,OACxBhP,KAAKmL,cAAc8C,KACPzE,EAAAuF,EACfd,EAAQjO,KAAKyE,YAAYlD,EAAM2C,EAAI6K,EAAavH,cAMnD,CACLzK,IAAKkR,EACL1E,UACAC,eACAC,UACAC,SAEH,CACD,aAAAyB,CAAcpO,GACZ,aAAe,IAARA,IAAwBiD,KAAKqC,QAAQ4M,YAAsB,OAARlS,IAAoBiD,KAAKqC,QAAQ6M,mBAA6B,KAARnS,EACjH,CACD,WAAA0H,CAAYlD,EAAM2C,EAAIzG,EAAK4E,EAAU,CAAA,GA9yBvC,IAAAN,EA+yBQ,OAAA,OAAAA,EAAA/B,KAAKiK,iBAAL,EAAAlI,EAAiB0C,aAAoBzE,KAAKiK,WAAWxF,YAAYlD,EAAM2C,EAAIzG,EAAK4E,GAC7ErC,KAAKmP,cAAc1K,YAAYlD,EAAM2C,EAAIzG,EAAK4E,EACtD,CACD,oBAAAuH,CAAqBvH,EAAU,IAC7B,MAAM+M,EAAc,CAAC,eAAgB,UAAW,UAAW,UAAW,MAAO,OAAQ,cAAe,KAAM,eAAgB,cAAe,gBAAiB,gBAAiB,aAAc,cAAe,iBAClMC,EAA2BhN,EAAQ1E,UAAYf,EAASyF,EAAQ1E,SAClE,IAAA+B,EAAO2P,EAA2BhN,EAAQ1E,QAAU0E,EAUxD,GATIgN,QAAqD,IAAlBhN,EAAQ+H,QAC7C1K,EAAK0K,MAAQ/H,EAAQ+H,OAEnBpK,KAAKqC,QAAQkF,cAAc2F,mBACtBxN,EAAA,IACFM,KAAKqC,QAAQkF,cAAc2F,oBAC3BxN,KAGF2P,EAA0B,CACtB3P,EAAA,IACFA,GAEL,IAAA,MAAWjC,KAAO2R,SACT1P,EAAKjC,EAEf,CACM,OAAAiC,CACR,CACD,sBAAO2K,CAAgBhI,GACrB,MAAME,EAAS,eACf,IAAA,MAAW+M,KAAUjN,EACnB,GAAIjE,OAAOC,UAAUC,eAAeC,KAAK8D,EAASiN,IAAW/M,IAAW+M,EAAO7G,UAAU,EAAGlG,UAAkB,IAAcF,EAAQiN,GAC3H,OAAA,EAGJ,OAAA,CACR,EAGH,MAAMC,EACJ,WAAAzP,CAAYuC,GACVrC,KAAKqC,QAAUA,EACVrC,KAAAwP,cAAgBxP,KAAKqC,QAAQmN,gBAAiB,EAC9CxP,KAAAwC,OAASS,EAAWH,OAAO,gBACjC,CACD,qBAAA2M,CAAsBlO,GAEpB,KADAA,EAAOD,EAAeC,KACTA,EAAK7D,QAAQ,KAAO,EAAU,OAAA,KACrC,MAAAkB,EAAI2C,EAAKtD,MAAM,KACjB,OAAa,IAAbW,EAAET,OAAqB,MAC3BS,EAAEoQ,MACoC,MAAlCpQ,EAAEA,EAAET,OAAS,GAAGmL,cAA8B,KAC3CtJ,KAAK0P,mBAAmB9Q,EAAEiG,KAAK,MACvC,CACD,uBAAA8K,CAAwBpO,GAEtB,KADAA,EAAOD,EAAeC,KACTA,EAAK7D,QAAQ,KAAO,EAAU,OAAA6D,EACrC,MAAA3C,EAAI2C,EAAKtD,MAAM,KACrB,OAAO+B,KAAK0P,mBAAmB9Q,EAAE,GAClC,CACD,kBAAA8Q,CAAmBnO,GACjB,GAAI3E,EAAS2E,IAASA,EAAK7D,QAAQ,MAAW,EAAA,CACxC,IAAAkS,EACA,IACFA,EAAgBC,KAAKC,oBAAoBvO,GAAM,EACvD,OAAe5C,GAAK,CAId,OAHIiR,GAAiB5P,KAAKqC,QAAQ0N,eAChCH,EAAgBA,EAActG,eAE5BsG,IACA5P,KAAKqC,QAAQ0N,aACRxO,EAAK+H,cAEP/H,EACR,CACM,OAAAvB,KAAKqC,QAAQ2N,WAAahQ,KAAKqC,QAAQ0N,aAAexO,EAAK+H,cAAgB/H,CACnF,CACD,eAAA0O,CAAgB1O,GAIP,OAHmB,iBAAtBvB,KAAKqC,QAAQ6N,MAA2BlQ,KAAKqC,QAAQ8N,4BAChD5O,EAAAvB,KAAK2P,wBAAwBpO,KAE9BvB,KAAKwP,gBAAkBxP,KAAKwP,cAAcrR,QAAU6B,KAAKwP,cAAc9R,QAAQ6D,IAAQ,CAChG,CACD,qBAAA6O,CAAsB/B,GAChB,IAACA,EAAc,OAAA,KACf,IAAAJ,EAsBG,OArBPI,EAAM9K,SAAgBhC,IACpB,GAAI0M,EAAO,OACL,MAAAoC,EAAarQ,KAAK0P,mBAAmBnO,GACtCvB,KAAKqC,QAAQmN,gBAAiBxP,KAAKiQ,gBAAgBI,KAAqBpC,EAAAoC,OAE1EpC,GAASjO,KAAKqC,QAAQmN,eACzBnB,EAAM9K,SAAgBhC,IACpB,GAAI0M,EAAO,OACL,MAAAqC,EAAYtQ,KAAKyP,sBAAsBlO,GAC7C,GAAIvB,KAAKiQ,gBAAgBK,UAAmBrC,EAAQqC,EAC9C,MAAAC,EAAUvQ,KAAK2P,wBAAwBpO,GAC7C,GAAIvB,KAAKiQ,gBAAgBM,UAAiBtC,EAAQsC,EAClDtC,EAAQjO,KAAKqC,QAAQmN,cAActJ,MAAqBsK,GAClDA,IAAiBD,EAAgBC,EACjCA,EAAa9S,QAAQ,KAAO,GAAK6S,EAAQ7S,QAAQ,KAAO,OAAxD,EACA8S,EAAa9S,QAAQ,KAAO,GAAK6S,EAAQ7S,QAAQ,KAAO,GAAK8S,EAAa/H,UAAU,EAAG+H,EAAa9S,QAAQ,QAAU6S,GACpF,IAAlCC,EAAa9S,QAAQ6S,IAAkBA,EAAQpS,OAAS,EAD8EqS,OACtI,OAILvC,IAAeA,EAAAjO,KAAK2L,iBAAiB3L,KAAKqC,QAAQuJ,aAAa,IAC7DqC,CACR,CACD,gBAAAtC,CAAiB8E,EAAWlP,GACtB,IAACkP,EAAW,MAAO,GAGvB,GAFyB,mBAAdA,IAA0BA,EAAYA,EAAUlP,IACvD3E,EAAS6T,KAAYA,EAAY,CAACA,IAClC7M,MAAMe,QAAQ8L,GAAmB,OAAAA,EACrC,IAAKlP,EAAa,OAAAkP,EAAUC,SAAW,GACnC,IAAAzC,EAAQwC,EAAUlP,GAKtB,OAJK0M,IAAOA,EAAQwC,EAAUzQ,KAAKyP,sBAAsBlO,KACpD0M,IAAOA,EAAQwC,EAAUzQ,KAAK0P,mBAAmBnO,KACjD0M,IAAOA,EAAQwC,EAAUzQ,KAAK2P,wBAAwBpO,KACtD0M,IAAOA,EAAQwC,EAAUC,SACvBzC,GAAS,EACjB,CACD,kBAAAnC,CAAmBvK,EAAMoP,GACvB,MAAMC,EAAgB5Q,KAAK2L,mBAAmC,IAAjBgF,EAAyB,GAAKA,IAAiB3Q,KAAKqC,QAAQuJ,aAAe,GAAIrK,GACtH8M,EAAQ,GACRwC,EAAe1I,IACdA,IACDnI,KAAKiQ,gBAAgB9H,GACvBkG,EAAMxN,KAAKsH,GAEXnI,KAAKwC,OAAOX,KAAK,uDAAuDsG,OAarE,OAVHvL,EAAS2E,KAAUA,EAAK7D,QAAQ,MAAO,GAAM6D,EAAK7D,QAAQ,MAAY,IAC9C,iBAAtBsC,KAAKqC,QAAQ6N,QAAiClQ,KAAK0P,mBAAmBnO,IAChD,iBAAtBvB,KAAKqC,QAAQ6N,MAAiD,gBAAtBlQ,KAAKqC,QAAQ6N,MAAgCW,EAAA7Q,KAAKyP,sBAAsBlO,IAC1F,gBAAtBvB,KAAKqC,QAAQ6N,QAAgClQ,KAAK2P,wBAAwBpO,KACrE3E,EAAS2E,IACVsP,EAAA7Q,KAAK0P,mBAAmBnO,IAElCqP,EAAcrN,SAAcuN,IACtBzC,EAAM3Q,QAAQoT,GAAM,GAAWD,EAAA7Q,KAAK0P,mBAAmBoB,OAEtDzC,CACR,EAGH,MAAM0C,EAAgB,CACpBC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,KAAM,EACNC,MAAO,GAEHC,EAAY,CAChBC,OAAQnH,GAAmB,IAAVA,EAAc,MAAQ,QACvCoH,gBAAiB,KAAO,CACtBC,iBAAkB,CAAC,MAAO,YAG9B,MAAMC,EACJ,WAAA5R,CAAY4L,EAAerJ,EAAU,IACnCrC,KAAK0L,cAAgBA,EACrB1L,KAAKqC,QAAUA,EACVrC,KAAAwC,OAASS,EAAWH,OAAO,kBAChC9C,KAAK2R,iBAAmB,EACzB,CACD,OAAAC,CAAQlN,EAAK7H,GACNmD,KAAA6R,MAAMnN,GAAO7H,CACnB,CACD,UAAAiV,GACE9R,KAAK2R,iBAAmB,EACzB,CACD,OAAAI,CAAQxQ,EAAMc,EAAU,IACtB,MAAM2P,EAAc1Q,EAAwB,QAATC,EAAiB,KAAOA,GACrDE,EAAOY,EAAQqI,QAAU,UAAY,WACrCuH,EAAWxM,KAAKE,UAAU,CAC9BqM,cACAvQ,SAEE,GAAAwQ,KAAYjS,KAAK2R,iBACZ,OAAA3R,KAAK2R,iBAAiBM,GAE3B,IAAAC,EACA,IACKA,EAAA,IAAIrC,KAAKsC,YAAYH,EAAa,CACvCvQ,QAEH,OAAQ2Q,GACP,IAAKvC,KAEI,OADF7P,KAAAwC,OAAOV,MAAM,iDACXwP,EAET,IAAK/P,EAAKoH,MAAM,OAAe,OAAA2I,EAC/B,MAAMe,EAAUrS,KAAK0L,cAAciE,wBAAwBpO,GACpD2Q,EAAAlS,KAAK+R,QAAQM,EAAShQ,EAC9B,CAEM,OADFrC,KAAA2R,iBAAiBM,GAAYC,EAC3BA,CACR,CACD,WAAAI,CAAY/Q,EAAMc,EAAU,IAC1B,IAAI6P,EAAOlS,KAAK+R,QAAQxQ,EAAMc,GAEvB,OADF6P,IAAMA,EAAOlS,KAAK+R,QAAQ,MAAO1P,KAC/B,MAAA6P,OAAA,EAAAA,EAAMV,kBAAkBC,iBAAiBtT,QAAS,CAC1D,CACD,mBAAAoU,CAAoBhR,EAAM9D,EAAK4E,EAAU,CAAA,GAChC,OAAArC,KAAKwM,YAAYjL,EAAMc,GAASgG,KAAIoE,GAAU,GAAGhP,IAAMgP,KAC/D,CACD,WAAAD,CAAYjL,EAAMc,EAAU,IAC1B,IAAI6P,EAAOlS,KAAK+R,QAAQxQ,EAAMc,GAE1B,OADC6P,IAAMA,EAAOlS,KAAK+R,QAAQ,MAAO1P,IACjC6P,EACEA,EAAKV,kBAAkBC,iBAAiBe,MAAK,CAACC,EAAiBC,IAAoB3B,EAAc0B,GAAmB1B,EAAc2B,KAAkBrK,KAAsBsK,GAAA,GAAG3S,KAAKqC,QAAQuQ,UAAUvQ,EAAQqI,QAAU,UAAU1K,KAAKqC,QAAQuQ,UAAY,KAAKD,MADnP,EAEnB,CACD,SAAAnI,CAAUjJ,EAAM6I,EAAO/H,EAAU,CAAA,GAC/B,MAAM6P,EAAOlS,KAAK+R,QAAQxQ,EAAMc,GAChC,OAAI6P,EACK,GAAGlS,KAAKqC,QAAQuQ,UAAUvQ,EAAQqI,QAAU,UAAU1K,KAAKqC,QAAQuQ,UAAY,KAAKV,EAAKX,OAAOnH,MAEzGpK,KAAKwC,OAAOX,KAAK,6BAA6BN,KACvCvB,KAAKwK,UAAU,MAAOJ,EAAO/H,GACrC,EAGH,MAAMwQ,EAAuB,CAACnT,EAAMoT,EAAarV,EAAKsD,EAAe,IAAKqD,GAAsB,KAC9F,IAAItG,EA57BsB,EAAC4B,EAAMoT,EAAarV,KACxC,MAAAsH,EAAQhG,EAAQW,EAAMjC,GAC5B,YAAc,IAAVsH,EACKA,EAEFhG,EAAQ+T,EAAarV,IAu7BjBsV,CAAoBrT,EAAMoT,EAAarV,GAK3C,OAJFK,GAAQsG,GAAuBxH,EAASa,KACpCK,EAAAgD,EAASpB,EAAMjC,EAAKsD,QACd,IAATjD,IAAoBA,EAAOgD,EAASgS,EAAarV,EAAKsD,KAErDjD,GAEHkV,EAAYC,GAAOA,EAAItV,QAAQ,MAAO,QAC5C,MAAMuV,EACJ,WAAApT,CAAYuC,EAAU,IAxhCxB,IAAAN,EAyhCS/B,KAAAwC,OAASS,EAAWH,OAAO,gBAChC9C,KAAKqC,QAAUA,EACVrC,KAAAmT,QAAS,OAAApR,EAAA,MAAAM,OAAA,EAAAA,EAASkF,oBAAT,EAAAxF,EAAwBoR,UAAoBpO,GAAAA,GAC1D/E,KAAKsC,KAAKD,EACX,CACD,IAAAC,CAAKD,EAAU,IACRA,EAAQkF,gBAAelF,EAAQkF,cAAgB,CAClD6L,aAAa,IAET,MACJ3T,OAAQ4T,EAAAD,YACRA,EAAAE,oBACAA,EAAA/Q,OACAA,EAAAgR,cACAA,EAAA9G,OACAA,EAAA+G,cACAA,EAAAC,gBACAA,EAAAC,eACAA,EAAAC,eACAA,EAAAC,cACAA,EAAAC,qBACAA,EAAAC,cACAA,EAAAC,qBACAA,EAAAC,wBACAA,EAAAC,YACAA,EAAAC,aACAA,GACE7R,EAAQkF,cACPvH,KAAAP,YAAsB,IAAb4T,EAAyBA,EAAW5T,EAC7CO,KAAAoT,iBAA8B,IAAhBA,GAA4BA,EAC1CpT,KAAAsT,yBAA8C,IAAxBA,GAAoCA,EAC/DtT,KAAKuC,OAASA,EAASjD,EAAYiD,GAAUgR,GAAiB,KAC9DvT,KAAKyM,OAASA,EAASnN,EAAYmN,GAAU+G,GAAiB,KAC9DxT,KAAKyT,gBAAkBA,GAAmB,IACrCzT,KAAA2T,eAAiBD,EAAiB,GAAKC,GAAkB,IAC9D3T,KAAK0T,eAAiB1T,KAAK2T,eAAiB,GAAKD,GAAkB,GACnE1T,KAAK4T,cAAgBA,EAAgBtU,EAAYsU,GAAiBC,GAAwBvU,EAAY,OACtGU,KAAK8T,cAAgBA,EAAgBxU,EAAYwU,GAAiBC,GAAwBzU,EAAY,KACtGU,KAAKgU,wBAA0BA,GAA2B,IAC1DhU,KAAKiU,YAAcA,GAAe,IAC7BjU,KAAAkU,kBAAgC,IAAjBA,GAA6BA,EACjDlU,KAAKmU,aACN,CACD,KAAAxG,GACM3N,KAAKqC,SAAcrC,KAAAsC,KAAKtC,KAAKqC,QAClC,CACD,WAAA8R,GACQ,MAAAC,EAAmB,CAACC,EAAgBhU,KACpC,MAAAgU,OAAA,EAAAA,EAAgBnV,UAAWmB,GAC7BgU,EAAeC,UAAY,EACpBD,GAEF,IAAI5T,OAAOJ,EAAS,KAExBL,KAAAuU,OAASH,EAAiBpU,KAAKuU,OAAQ,GAAGvU,KAAKuC,cAAcvC,KAAKyM,UACvEzM,KAAKwU,eAAiBJ,EAAiBpU,KAAKwU,eAAgB,GAAGxU,KAAKuC,SAASvC,KAAK2T,sBAAsB3T,KAAK0T,iBAAiB1T,KAAKyM,UAC9HzM,KAAA6I,cAAgBuL,EAAiBpU,KAAK6I,cAAe,GAAG7I,KAAK4T,qBAAqB5T,KAAK8T,gBAC7F,CACD,WAAAvG,CAAYhO,EAAKG,EAAMgF,EAAKrC,GAnlC9B,IAAAN,EAolCQ,IAAA4G,EACA5D,EACA0P,EACE,MAAA3B,EAAc9S,KAAKqC,SAAWrC,KAAKqC,QAAQkF,eAAiBvH,KAAKqC,QAAQkF,cAAc2F,kBAAoB,CAAA,EAC3GwH,EAAsBjX,IAC1B,GAAIA,EAAIC,QAAQsC,KAAKyT,iBAAmB,EAAG,CACnC,MAAA3V,EAAO+U,EAAqBnT,EAAMoT,EAAarV,EAAKuC,KAAKqC,QAAQtB,aAAcf,KAAKqC,QAAQ+B,qBAClG,OAAOpE,KAAKkU,aAAelU,KAAKmT,OAAOrV,OAAM,EAAW4G,EAAK,IACxDrC,KACA3C,EACHiV,iBAAkBlX,IACfK,CACN,CACD,MAAMc,EAAInB,EAAIQ,MAAM+B,KAAKyT,iBACnBjV,EAAII,EAAE+B,QAAQiU,OACdC,EAAIjW,EAAEiG,KAAK7E,KAAKyT,iBAAiBmB,OACvC,OAAO5U,KAAKmT,OAAON,EAAqBnT,EAAMoT,EAAatU,EAAGwB,KAAKqC,QAAQtB,aAAcf,KAAKqC,QAAQ+B,qBAAsByQ,EAAGnQ,EAAK,IAC/HrC,KACA3C,EACHiV,iBAAkBnW,KAGtBwB,KAAKmU,cACL,MAAMW,GAA8B,MAAAzS,OAAA,EAAAA,EAASyS,8BAA+B9U,KAAKqC,QAAQyS,4BACnF1H,OAA8D,KAA5C,OAAArL,EAAA,MAAAM,OAAA,EAAAA,EAASkF,oBAAT,EAAAxF,EAAwBqL,iBAAgC/K,EAAQkF,cAAc6F,gBAAkBpN,KAAKqC,QAAQkF,cAAc6F,gBA2C5I,MA1CO,CAAC,CACb2H,MAAO/U,KAAKwU,eACZQ,UAAkB/B,GAAAD,EAAUC,IAC3B,CACD8B,MAAO/U,KAAKuU,OACZS,UAAkB/B,GAAAjT,KAAKoT,YAAcJ,EAAUhT,KAAKP,OAAOwT,IAAQD,EAAUC,KAEzE1P,SAAgB0R,IAEpB,IADWR,EAAA,EACJ9L,EAAQsM,EAAKF,MAAMG,KAAK3V,IAAM,CACnC,MAAM4V,EAAaxM,EAAM,GAAGiM,OAE5B,GADA7P,EAAQ2P,EAAaS,QACP,IAAVpQ,EACE,GAAuC,mBAAhC+P,EAA4C,CACrD,MAAMM,EAAON,EAA4BvV,EAAKoJ,EAAOtG,GAC7C0C,EAAAnI,EAASwY,GAAQA,EAAO,EAC5C,MAAA,GAAqB/S,GAAWjE,OAAOC,UAAUC,eAAeC,KAAK8D,EAAS8S,GAC1DpQ,EAAA,WACCqI,EAAiB,CAC1BrI,EAAQ4D,EAAM,GACd,QACZ,CACY3I,KAAKwC,OAAOX,KAAK,8BAA8BsT,uBAAgC5V,KACvEwF,EAAA,EACT,MACSnI,EAASmI,IAAW/E,KAAKsT,sBACnCvO,EAAQ1H,EAAW0H,IAEf,MAAAiQ,EAAYC,EAAKD,UAAUjQ,GAS7B,GARJxF,EAAMA,EAAI5B,QAAQgL,EAAM,GAAIqM,GACxB5H,GACG6H,EAAAF,MAAMT,WAAavP,EAAM5G,OAC9B8W,EAAKF,MAAMT,WAAa3L,EAAM,GAAGxK,QAEjC8W,EAAKF,MAAMT,UAAY,EAEzBG,IACIA,GAAYzU,KAAKiU,YACnB,KAEH,KAEI1U,CACR,CACD,IAAAkO,CAAKlO,EAAKuR,EAAIzO,EAAU,CAAA,GAClB,IAAAsG,EACA5D,EACAsQ,EACE,MAAAC,EAAmB,CAAC7X,EAAK8X,KAC7B,MAAMC,EAAMxV,KAAKgU,wBACjB,GAAIvW,EAAIC,QAAQ8X,GAAO,EAAU,OAAA/X,EAC3B,MAAA0K,EAAI1K,EAAIQ,MAAM,IAAIwC,OAAO,GAAG+U,WAClC,IAAIC,EAAgB,IAAItN,EAAE,KAC1B1K,EAAM0K,EAAE,GACQsN,EAAAzV,KAAKuN,YAAYkI,EAAeJ,GAC1C,MAAAK,EAAsBD,EAAc9M,MAAM,MAC1CgN,EAAsBF,EAAc9M,MAAM,SAC3C,MAAA+M,OAAA,EAAAA,EAAqBvX,SAAU,GAAK,GAAM,IAAMwX,GAAuBA,EAAoBxX,OAAS,GAAM,KAC7FsX,EAAAA,EAAc9X,QAAQ,KAAM,MAE1C,IACc0X,EAAA5P,KAAKC,MAAM+P,GACvBF,IAAkCF,EAAA,IACjCE,KACAF,GAEN,OAAQ1W,GAEP,OADAqB,KAAKwC,OAAOX,KAAK,oDAAoDpE,IAAOkB,GACrE,GAAGlB,IAAM+X,IAAMC,GACvB,CAEM,OADHJ,EAAczK,cAAgByK,EAAczK,aAAalN,QAAQsC,KAAKuC,SAAc,UAAO8S,EAAczK,aACtGnN,GAET,KAAOkL,EAAQ3I,KAAK6I,cAAcqM,KAAK3V,IAAM,CAC3C,IAAIqW,EAAa,GACDP,EAAA,IACXhT,GAEWgT,EAAAA,EAAc1X,UAAYf,EAASyY,EAAc1X,SAAW0X,EAAc1X,QAAU0X,EACpGA,EAAcvH,oBAAqB,SAC5BuH,EAAczK,aACrB,IAAIiL,GAAW,EACf,IAAqD,IAAjDlN,EAAM,GAAGjL,QAAQsC,KAAKyT,mBAA4B,OAAOlL,KAAKI,EAAM,IAAK,CAC3E,MAAMP,EAAIO,EAAM,GAAG1K,MAAM+B,KAAKyT,iBAAiBpL,KAAIyN,GAAQA,EAAKlB,SAC1DjM,EAAA,GAAKP,EAAEzH,QACAiV,EAAAxN,EACFyN,GAAA,CACZ,CAEG,GADI9Q,EAAA+L,EAAGwE,EAAiB/W,KAAKyB,KAAM2I,EAAM,GAAGiM,OAAQS,GAAgBA,GACpEtQ,GAAS4D,EAAM,KAAOpJ,IAAQ3C,EAASmI,GAAe,OAAAA,EACrDnI,EAASmI,KAAQA,EAAQ1H,EAAW0H,IACpCA,IACE/E,KAAAwC,OAAOX,KAAK,qBAAqB8G,EAAM,kBAAkBpJ,KACtDwF,EAAA,IAEN8Q,IACM9Q,EAAA6Q,EAAWG,QAAO,CAAC5P,EAAG0O,IAAM7U,KAAKmT,OAAOhN,EAAG0O,EAAGxS,EAAQqC,IAAK,IAC9DrC,EACHsS,iBAAkBhM,EAAM,GAAGiM,UACzB7P,EAAM6P,SAEZrV,EAAMA,EAAI5B,QAAQgL,EAAM,GAAI5D,GAC5B/E,KAAKuU,OAAOD,UAAY,CACzB,CACM,OAAA/U,CACR,EAGH,MA+BMyW,EAA8BC,IAClC,MAAMC,EAAQ,CAAA,EACP,MAAA,CAAC/P,EAAG6F,EAAG1E,KACZ,IAAI6O,EAAc7O,EACdA,GAAKA,EAAEqN,kBAAoBrN,EAAE8O,cAAgB9O,EAAE8O,aAAa9O,EAAEqN,mBAAqBrN,EAAEA,EAAEqN,oBAC3EwB,EAAA,IACTA,EACH,CAAC7O,EAAEqN,uBAAmB,IAG1B,MAAMlX,EAAMuO,EAAIvG,KAAKE,UAAUwQ,GAC3B,IAAAE,EAAMH,EAAMzY,GAKhB,OAJK4Y,IACHA,EAAMJ,EAAG3U,EAAe0K,GAAI1E,GAC5B4O,EAAMzY,GAAO4Y,GAERA,EAAIlQ,KAGTmQ,EAA2BL,GAAM,CAAC9P,EAAG6F,EAAG1E,IAAM2O,EAAG3U,EAAe0K,GAAI1E,EAAtB2O,CAAyB9P,GAC7E,MAAMoQ,EACJ,WAAAzW,CAAYuC,EAAU,IACfrC,KAAAwC,OAASS,EAAWH,OAAO,aAChC9C,KAAKqC,QAAUA,EACfrC,KAAKsC,KAAKD,EACX,CACD,IAAAC,CAAK2E,EAAU5E,EAAU,CACvBkF,cAAe,CAAE,IAEZvH,KAAAyT,gBAAkBpR,EAAQkF,cAAckM,iBAAmB,IAC1D,MAAA+C,EAAKnU,EAAQoU,oBAAsBT,EAAwBM,EACjEtW,KAAK0W,QAAU,CACbC,OAAQH,GAAG,CAAC9R,EAAK8C,KACf,MAAMoP,EAAY,IAAI/G,KAAKgH,aAAanS,EAAK,IACxC8C,IAEE,OAAAyL,GAAO2D,EAAUzD,OAAOF,MAEjC6D,SAAUN,GAAG,CAAC9R,EAAK8C,KACjB,MAAMoP,EAAY,IAAI/G,KAAKgH,aAAanS,EAAK,IACxC8C,EACHuP,MAAO,aAEF,OAAA9D,GAAO2D,EAAUzD,OAAOF,MAEjC+D,SAAUR,GAAG,CAAC9R,EAAK8C,KACjB,MAAMoP,EAAY,IAAI/G,KAAKoH,eAAevS,EAAK,IAC1C8C,IAEE,OAAAyL,GAAO2D,EAAUzD,OAAOF,MAEjCiE,aAAcV,GAAG,CAAC9R,EAAK8C,KACrB,MAAMoP,EAAY,IAAI/G,KAAKsH,mBAAmBzS,EAAK,IAC9C8C,IAEL,UAAcoP,EAAUzD,OAAOF,EAAKzL,EAAI4P,OAAS,UAEnDC,KAAMb,GAAG,CAAC9R,EAAK8C,KACb,MAAMoP,EAAY,IAAI/G,KAAKyH,WAAW5S,EAAK,IACtC8C,IAEE,OAAAyL,GAAO2D,EAAUzD,OAAOF,MAGpC,CACD,GAAAsE,CAAI9Q,EAAMqK,GACR9Q,KAAK0W,QAAQjQ,EAAK6C,cAAcsL,QAAU9D,CAC3C,CACD,SAAA0G,CAAU/Q,EAAMqK,GACT9Q,KAAA0W,QAAQjQ,EAAK6C,cAAcsL,QAAUoB,EAAsBlF,EACjE,CACD,MAAAqC,CAAOpO,EAAOoO,EAAQzO,EAAKrC,EAAU,CAAA,GACnC,MAAMqU,EAAUvD,EAAOlV,MAAM+B,KAAKyT,iBAC9B,GAAAiD,EAAQvY,OAAS,GAAKuY,EAAQ,GAAGhZ,QAAQ,KAAO,GAAKgZ,EAAQ,GAAGhZ,QAAQ,KAAO,GAAKgZ,EAAQxQ,MAAU2O,GAAAA,EAAEnX,QAAQ,MAAO,IAAK,CACxH,MAAA4W,EAAYoC,EAAQe,WAAU5C,GAAKA,EAAEnX,QAAQ,MAAS,IAC5DgZ,EAAQ,GAAK,CAACA,EAAQ,MAAOA,EAAQlS,OAAO,EAAG8P,IAAYzP,KAAK7E,KAAKyT,gBACtE,CAyBM,OAxBQiD,EAAQX,QAAO,CAAC2B,EAAK7C,KAr0CxC,IAAA9S,EAs0CY,MAAA4V,WACJA,EAAAC,cACAA,GA/Ge,CAAaC,IAClC,IAAIF,EAAaE,EAAUvO,cAAcsL,OACzC,MAAMgD,EAAgB,CAAA,EACtB,GAAIC,EAAUna,QAAQ,MAAW,EAAA,CACzB,MAAAkB,EAAIiZ,EAAU5Z,MAAM,KAC1B0Z,EAAa/Y,EAAE,GAAG0K,cAAcsL,OAC1B,MAAAkD,EAASlZ,EAAE,GAAG6J,UAAU,EAAG7J,EAAE,GAAGT,OAAS,GAC5B,aAAfwZ,GAA6BG,EAAOpa,QAAQ,KAAO,EAChDka,EAAcd,WAAwBc,EAAAd,SAAWgB,EAAOlD,QACrC,iBAAf+C,GAAiCG,EAAOpa,QAAQ,KAAO,EAC3Dka,EAAcR,QAAqBQ,EAAAR,MAAQU,EAAOlD,QAE1CkD,EAAO7Z,MAAM,KACrBsF,SAAeiE,IAClB,GAAIA,EAAK,CACP,MAAO/J,KAAQsa,GAAQvQ,EAAIvJ,MAAM,KAC3BgV,EAAM8E,EAAKlT,KAAK,KAAK+P,OAAOjX,QAAQ,WAAY,IAChDqa,EAAava,EAAImX,OAClBgD,EAAcI,KAAaJ,EAAcI,GAAc/E,GAChD,UAARA,IAA+B2E,EAAAI,IAAc,GACrC,SAAR/E,IAA8B2E,EAAAI,IAAc,GAC3CC,MAAMhF,OAAoB+E,GAAcE,SAASjF,EAAK,IAC5D,IAGN,CACM,MAAA,CACL0E,aACAC,kBAoFMO,CAAetD,GACf,GAAA7U,KAAK0W,QAAQiB,GAAa,CAC5B,IAAIS,EAAYV,EACZ,IACI,MAAAW,GAAa,OAAAtW,EAAA,MAAAM,OAAA,EAAAA,EAAS+T,mBAAT,EAAArU,EAAwBM,EAAQsS,oBAAqB,GAClE3I,EAAIqM,EAAWC,QAAUD,EAAW3T,KAAOrC,EAAQiW,QAAUjW,EAAQqC,KAAOA,EAClF0T,EAAYpY,KAAK0W,QAAQiB,GAAYD,EAAK1L,EAAG,IACxC4L,KACAvV,KACAgW,GAEN,OAAQvW,GACF9B,KAAAwC,OAAOX,KAAKC,EAClB,CACM,OAAAsW,CACf,CAGa,OAFLpY,KAAKwC,OAAOX,KAAK,oCAAoC8V,KAEhDD,IACN3S,EAEJ,EASH,MAAMwT,UAAkBrV,EACtB,WAAApD,CAAY0Y,EAASC,EAAOxR,EAAU5E,EAAU,CAAA,GAx2ClD,IAAAN,EAAAC,UA02CIhC,KAAKwY,QAAUA,EACfxY,KAAKyY,MAAQA,EACbzY,KAAKiH,SAAWA,EAChBjH,KAAK0L,cAAgBzE,EAASyE,cAC9B1L,KAAKqC,QAAUA,EACVrC,KAAAwC,OAASS,EAAWH,OAAO,oBAChC9C,KAAK0Y,aAAe,GACf1Y,KAAA2Y,iBAAmBtW,EAAQsW,kBAAoB,GACpD3Y,KAAK4Y,aAAe,EACpB5Y,KAAK6Y,WAAaxW,EAAQwW,YAAc,EAAIxW,EAAQwW,WAAa,EACjE7Y,KAAK8Y,aAAezW,EAAQyW,cAAgB,EAAIzW,EAAQyW,aAAe,IACvE9Y,KAAK+Y,MAAQ,GACb/Y,KAAKgZ,MAAQ,GACb,OAAAhX,EAAA,OAAAD,EAAA/B,KAAKwY,cAAS,EAAAzW,EAAAO,OAAON,EAAAzD,KAAAwD,EAAAkF,EAAU5E,EAAQmW,QAASnW,EACjD,CACD,SAAA4W,CAAUC,EAAWtR,EAAYvF,EAAS8W,GACxC,MAAMC,EAAS,CAAA,EACTC,EAAU,CAAA,EACVC,EAAkB,CAAA,EAClBC,EAAmB,CAAA,EA4BlB,OA3BPL,EAAU3V,SAAemB,IACvB,IAAI8U,GAAmB,EACvB5R,EAAWrE,SAAcW,IACvB,MAAMuC,EAAO,GAAG/B,KAAOR,KAClB7B,EAAQoX,QAAUzZ,KAAKyY,MAAM5S,kBAAkBnB,EAAKR,GAClDlE,KAAA+Y,MAAMtS,GAAQ,EACVzG,KAAK+Y,MAAMtS,GAAQ,IAAmC,IAArBzG,KAAK+Y,MAAMtS,QAC/B,IAAlB4S,EAAQ5S,KAAqB4S,EAAQ5S,IAAQ,IAE5CzG,KAAA+Y,MAAMtS,GAAQ,EACA+S,GAAA,OACG,IAAlBH,EAAQ5S,KAAqB4S,EAAQ5S,IAAQ,QAC5B,IAAjB2S,EAAO3S,KAAqB2S,EAAO3S,IAAQ,QAClB,IAAzB8S,EAAiBrV,KAAmBqV,EAAiBrV,IAAM,QAG9DsV,IAAkCF,EAAA5U,IAAO,OAE5CtG,OAAO6H,KAAKmT,GAAQjb,QAAUC,OAAO6H,KAAKoT,GAASlb,SACrD6B,KAAKgZ,MAAMnY,KAAK,CACdwY,UACAK,aAActb,OAAO6H,KAAKoT,GAASlb,OACnCwb,OAAQ,CAAE,EACVC,OAAQ,GACRT,aAGG,CACLC,OAAQhb,OAAO6H,KAAKmT,GACpBC,QAASjb,OAAO6H,KAAKoT,GACrBC,gBAAiBlb,OAAO6H,KAAKqT,GAC7BC,iBAAkBnb,OAAO6H,KAAKsT,GAEjC,CACD,MAAAI,CAAOlT,EAAM2L,EAAK1S,GACV,MAAAC,EAAI8G,EAAKxI,MAAM,KACfyG,EAAM/E,EAAE,GACRuE,EAAKvE,EAAE,GACTyS,GAAUpS,KAAA2D,KAAK,gBAAiBe,EAAKR,EAAIkO,IACxCA,GAAO1S,GACVM,KAAKyY,MAAMpT,kBAAkBX,EAAKR,EAAIxE,OAAM,OAAW,EAAW,CAChE6F,UAAU,IAGdvF,KAAK+Y,MAAMtS,GAAQ2L,GAAW,EAAA,EAC1BA,GAAO1S,IAAWM,KAAA+Y,MAAMtS,GAAQ,GACpC,MAAMkT,EAAS,CAAA,EACV3Z,KAAAgZ,MAAMzV,SAAasW,IA32CX,EAACvc,EAAQQ,EAAMY,KACxB,MAAA7B,IACJA,EAAA2B,EACAA,GACEX,EAAcP,EAAQQ,EAAMM,QAChCvB,EAAI2B,GAAK3B,EAAI2B,IAAM,GACf3B,EAAA2B,GAAGqC,KAAKnC,IAs2CRob,CAASD,EAAEF,OAAQ,CAACjV,GAAMR,GA7EV,EAAC2V,EAAGpT,UACA,IAApBoT,EAAER,QAAQ5S,YACLoT,EAAER,QAAQ5S,GACfoT,EAAAH,iBA2EAK,CAAcF,EAAGpT,GACb2L,GAAKyH,EAAED,OAAO/Y,KAAKuR,GACA,IAAnByH,EAAEH,cAAuBG,EAAEG,OAC7B5b,OAAO6H,KAAK4T,EAAEF,QAAQpW,SAAayI,IAC5B2N,EAAO3N,KAAW2N,EAAA3N,GAAK,IACtB,MAAAiO,EAAaJ,EAAEF,OAAO3N,GACxBiO,EAAW9b,QACb8b,EAAW1W,SAAa2W,SACD,IAAjBP,EAAO3N,GAAGkO,KAAyBP,EAAA3N,GAAGkO,IAAK,SAIrDL,EAAEG,MAAO,EACLH,EAAED,OAAOzb,OACT0b,EAAAV,SAASU,EAAED,QAEbC,EAAEV,eAIHnZ,KAAA2D,KAAK,SAAUgW,GACpB3Z,KAAKgZ,MAAQhZ,KAAKgZ,MAAM9Q,QAAY2R,IAACA,EAAEG,MACxC,CACD,IAAAG,CAAKzV,EAAKR,EAAIkW,EAAQC,EAAQ,EAAGC,EAAOta,KAAK8Y,aAAcK,GACzD,IAAKzU,EAAIvG,cAAegb,EAAS,KAAM,CAAA,GACnC,GAAAnZ,KAAK4Y,cAAgB5Y,KAAK2Y,iBAS5B,YARA3Y,KAAK0Y,aAAa7X,KAAK,CACrB6D,MACAR,KACAkW,SACAC,QACAC,OACAnB,aAICnZ,KAAA4Y,eACC,MAAA2B,EAAW,CAACnI,EAAK1S,KAEjB,GADCM,KAAA4Y,eACD5Y,KAAK0Y,aAAava,OAAS,EAAG,CAC1B,MAAAgD,EAAOnB,KAAK0Y,aAAa/X,QAC/BX,KAAKma,KAAKhZ,EAAKuD,IAAKvD,EAAK+C,GAAI/C,EAAKiZ,OAAQjZ,EAAKkZ,MAAOlZ,EAAKmZ,KAAMnZ,EAAKgY,SACvE,CACG/G,GAAO1S,GAAQ2a,EAAQra,KAAK6Y,WAC9B2B,YAAW,KACJxa,KAAAma,KAAK5b,KAAKyB,KAAM0E,EAAKR,EAAIkW,EAAQC,EAAQ,EAAU,EAAPC,EAAUnB,KAC1DmB,GAGLnB,EAAS/G,EAAK1S,IAEVoR,EAAK9Q,KAAKwY,QAAQ4B,GAAQK,KAAKza,KAAKwY,SACtC,GAAc,IAAd1H,EAAG3S,OAaA,OAAA2S,EAAGpM,EAAKR,EAAIqW,GAZb,IACI,MAAAnS,EAAI0I,EAAGpM,EAAKR,GACdkE,GAAuB,mBAAXA,EAAEsS,KACdtS,EAAAsS,SAAaH,EAAS,KAAM7a,KAAOib,MAAMJ,GAE3CA,EAAS,KAAMnS,EAElB,OAAQgK,GACPmI,EAASnI,EACV,CAIJ,CACD,cAAAwI,CAAe1B,EAAWtR,EAAYvF,EAAU,CAAA,EAAI8W,GAC9C,IAACnZ,KAAKwY,QAER,OADKxY,KAAAwC,OAAOX,KAAK,kEACVsX,GAAYA,IAEjBvc,EAASsc,OAAwBlZ,KAAK0L,cAAcI,mBAAmBoN,IACvEtc,EAASgL,KAAaA,EAAa,CAACA,IACxC,MAAMwR,EAASpZ,KAAKiZ,UAAUC,EAAWtR,EAAYvF,EAAS8W,GAC1D,IAACC,EAAOA,OAAOjb,OAEV,OADFib,EAAOC,QAAQlb,QAAgBgb,IAC7B,KAEFC,EAAAA,OAAO7V,SAAgBkD,IAC5BzG,KAAK6a,QAAQpU,KAEhB,CACD,IAAAyJ,CAAKgJ,EAAWtR,EAAYuR,GAC1BnZ,KAAK4a,eAAe1B,EAAWtR,EAAY,CAAE,EAAEuR,EAChD,CACD,MAAAM,CAAOP,EAAWtR,EAAYuR,GACvBnZ,KAAA4a,eAAe1B,EAAWtR,EAAY,CACzC6R,QAAQ,GACPN,EACJ,CACD,OAAA0B,CAAQpU,EAAMlE,EAAS,IACf,MAAA5C,EAAI8G,EAAKxI,MAAM,KACfyG,EAAM/E,EAAE,GACRuE,EAAKvE,EAAE,GACRK,KAAAma,KAAKzV,EAAKR,EAAI,YAAQ,OAAW,GAAW,CAACkO,EAAK1S,KACjD0S,GAAUpS,KAAAwC,OAAOX,KAAK,GAAGU,sBAA2B2B,kBAAmBQ,WAAc0N,IACpFA,GAAO1S,GAAMM,KAAKwC,OAAOd,IAAI,GAAGa,qBAA0B2B,kBAAmBQ,IAAOhF,GACpFM,KAAA2Z,OAAOlT,EAAM2L,EAAK1S,KAE1B,CACD,WAAA2M,CAAY6M,EAAW9P,EAAW3L,EAAKqd,EAAeC,EAAU1Y,EAAU,CAAE,EAAE2Y,EAAM,QAphDtF,IAAAjZ,EAAAC,EAAAiZ,EAAAC,EAAAC,EAqhDI,KAAI,OAAAnZ,EAAA,OAAKD,EAAA/B,KAAAiH,eAAU,EAAAlF,EAAAuM,YAAO,EAAAtM,EAAAuM,sBAAuB,OAAA2M,EAAA,OAAAD,EAAAjb,KAAKiH,eAAL,EAAAgU,EAAe3M,YAAf,EAAA4M,EAAsB3M,mBAAmBnF,KAI1F,GAAI3L,SAA6C,KAARA,EAAzC,CACI,GAAA,OAAA0d,EAAAnb,KAAKwY,cAAL,EAAA2C,EAAcrY,OAAQ,CACxB,MAAMsY,EAAO,IACR/Y,EACH0Y,YAEIjK,EAAK9Q,KAAKwY,QAAQ1V,OAAO2X,KAAKza,KAAKwY,SACrC,GAAA1H,EAAG3S,OAAS,EACV,IACE,IAAAiK,EAEFA,EADgB,IAAd0I,EAAG3S,OACD2S,EAAGoI,EAAW9P,EAAW3L,EAAKqd,EAAeM,GAE7CtK,EAAGoI,EAAW9P,EAAW3L,EAAKqd,GAEhC1S,GAAuB,mBAAXA,EAAEsS,KACdtS,EAAAsS,SAAaM,EAAI,KAAMtb,KAAOib,MAAMK,GAEtCA,EAAI,KAAM5S,EAEb,OAAQgK,GACP4I,EAAI5I,EACL,MAEDtB,EAAGoI,EAAW9P,EAAW3L,EAAKqd,EAAeE,EAAKI,EAErD,CACIlC,GAAcA,EAAU,IAC7BlZ,KAAKyY,MAAM3T,YAAYoU,EAAU,GAAI9P,EAAW3L,EAAKqd,EA5BA,OAHnD9a,KAAKwC,OAAOX,KAAK,qBAAqBpE,wBAA0B2L,wBAAiC,2NAgCpG,EAGH,MAAM7I,EAAM,KAAO,CACjBkC,OAAO,EACP4Y,WAAW,EACXnX,GAAI,CAAC,eACLC,UAAW,CAAC,eACZyH,YAAa,CAAC,OACduC,YAAY,EACZqB,eAAe,EACfW,0BAA0B,EAC1BD,KAAM,MACNoL,SAAS,EACTC,sBAAsB,EACtBxa,aAAc,IACd4G,YAAa,IACbkD,gBAAiB,IACjBiE,iBAAkB,IAClB0M,yBAAyB,EACzBnP,aAAa,EACbf,eAAe,EACfO,cAAe,WACfS,oBAAoB,EACpBH,mBAAmB,EACnB2I,6BAA6B,EAC7BlH,aAAa,EACbG,yBAAyB,EACzBkB,YAAY,EACZC,mBAAmB,EACnBtC,eAAe,EACf7C,YAAY,EACZ8C,uBAAuB,EACvBF,wBAAwB,EACxBD,6BAA6B,EAC7BrD,yBAAyB,EACzBJ,iCAA0CtH,IACxC,IAAI8Z,EAAM,CAAA,EAIN,GAHmB,iBAAZ9Z,EAAK,KAAiB8Z,EAAM9Z,EAAK,IACxC/E,EAAS+E,EAAK,MAAS8Z,EAAA7Q,aAAejJ,EAAK,IAC3C/E,EAAS+E,EAAK,MAAS8Z,EAAAC,aAAe/Z,EAAK,IACxB,iBAAZA,EAAK,IAAsC,iBAAZA,EAAK,GAAiB,CAC9D,MAAMU,EAAUV,EAAK,IAAMA,EAAK,GAChCvD,OAAO6H,KAAK5D,GAASkB,SAAe9F,IAC9Bge,EAAAhe,GAAO4E,EAAQ5E,KAEtB,CACM,OAAAge,GAETlU,cAAe,CACb6L,aAAa,EACbD,OAAiBpO,GAAAA,EACjBxC,OAAQ,KACRkK,OAAQ,KACRgH,gBAAiB,IACjBE,eAAgB,IAChBC,cAAe,MACfE,cAAe,IACfE,wBAAyB,IACzBC,YAAa,IACb7G,iBAAiB,GAEnBqJ,qBAAqB,IAEjBkF,EAAmBtZ,IAtnDzB,IAAAN,EAAAC,EA8nDSK,OAPHzF,EAASyF,EAAQ6B,MAAK7B,EAAQ6B,GAAK,CAAC7B,EAAQ6B,KAC5CtH,EAASyF,EAAQuJ,eAAcvJ,EAAQuJ,YAAc,CAACvJ,EAAQuJ,cAC9DhP,EAASyF,EAAQ8L,cAAa9L,EAAQ8L,WAAa,CAAC9L,EAAQ8L,cAC5D,OAAAnM,EAAA,SAAAK,EAAQmN,wBAAe9R,cAAvB,EAAAsE,EAAAzD,KAAAwD,EAAiC,WAAY,IAC/CM,EAAQmN,cAAgBnN,EAAQmN,cAAcvK,OAAO,CAAC,YAEnB,kBAA1B5C,EAAQuZ,gBAA6BvZ,EAAQgZ,UAAYhZ,EAAQuZ,eACrEvZ,GAGHwZ,EAAO,OASb,MAAMC,UAAa5Y,EACjB,WAAApD,CAAYuC,EAAU,CAAE,EAAE8W,GATA,IAAQ4C,EAkBhC,WAPK/b,KAAAqC,QAAUsZ,EAAiBtZ,GAChCrC,KAAKiH,SAAW,GAChBjH,KAAKwC,OAASS,EACdjD,KAAKgc,QAAU,CACbC,SAAU,IAfoBF,EAiBZ/b,KAhBT5B,OAAO8d,oBAAoB9d,OAAO+d,eAAeJ,IACzDxY,SAAemU,IACO,mBAAdqE,EAAKrE,KACdqE,EAAKrE,GAAOqE,EAAKrE,GAAK+C,KAAKsB,OAczB5C,IAAanZ,KAAKoc,gBAAkB/Z,EAAQga,QAAS,CACnD,IAACrc,KAAKqC,QAAQgZ,UAET,OADFrb,KAAAsC,KAAKD,EAAS8W,GACZnZ,KAETwa,YAAW,KACJxa,KAAAsC,KAAKD,EAAS8W,KAClB,EACJ,CACF,CACD,IAAA7W,CAAKD,EAAU,CAAE,EAAE8W,GACjBnZ,KAAKsc,gBAAiB,EACC,mBAAZja,IACEA,EAAAA,EACXA,EAAU,CAAA,GAEa,MAArBA,EAAQ8B,WAAqB9B,EAAQ6B,KACnCtH,EAASyF,EAAQ6B,IACnB7B,EAAQ8B,UAAY9B,EAAQ6B,GACnB7B,EAAQ6B,GAAGxG,QAAQ,eAAiB,IAC7C2E,EAAQ8B,UAAY9B,EAAQ6B,GAAG,KAGnC,MAAMqY,EAAUhc,IAChBP,KAAKqC,QAAU,IACVka,KACAvc,KAAKqC,WACLsZ,EAAiBtZ,IAEtBrC,KAAKqC,QAAQkF,cAAgB,IACxBgV,EAAQhV,iBACRvH,KAAKqC,QAAQkF,oBAEW,IAAzBlF,EAAQtB,eACLf,KAAAqC,QAAQ0F,wBAA0B1F,EAAQtB,mBAErB,IAAxBsB,EAAQsF,cACL3H,KAAAqC,QAAQ2F,uBAAyB3F,EAAQsF,aAEhD,MAAM6U,EAAuCC,GACtCA,EACwB,mBAAlBA,EAAqC,IAAIA,EAC7CA,EAFoB,KAIzB,IAACzc,KAAKqC,QAAQga,QAAS,CAMrB,IAAAzF,EALA5W,KAAKgc,QAAQxZ,OACfS,EAAWX,KAAKka,EAAoBxc,KAAKgc,QAAQxZ,QAASxC,KAAKqC,SAEpDY,EAAAX,KAAK,KAAMtC,KAAKqC,SAI3BuU,EADE5W,KAAKgc,QAAQpF,UACH5W,KAAKgc,QAAQpF,UAEbL,EAEd,MAAMmG,EAAK,IAAInN,EAAavP,KAAKqC,SACjCrC,KAAKyY,MAAQ,IAAIxU,EAAcjE,KAAKqC,QAAQ8C,UAAWnF,KAAKqC,SAC5D,MAAM1C,EAAIK,KAAKiH,SACftH,EAAE6C,OAASS,EACXtD,EAAEwP,cAAgBnP,KAAKyY,MACvB9Y,EAAE+L,cAAgBgR,EAChB/c,EAAA4K,eAAiB,IAAImH,EAAegL,EAAI,CACxC9J,QAAS5S,KAAKqC,QAAQwI,gBACtB0Q,qBAAsBvb,KAAKqC,QAAQkZ,wBAEjC3E,GAAe5W,KAAKqC,QAAQkF,cAAc4L,QAAUnT,KAAKqC,QAAQkF,cAAc4L,SAAWoJ,EAAQhV,cAAc4L,SAChHxT,EAAAiX,UAAY4F,EAAoB5F,GAClCjX,EAAEiX,UAAUtU,KAAK3C,EAAGK,KAAKqC,SACpBrC,KAAAqC,QAAQkF,cAAc4L,OAASxT,EAAEiX,UAAUzD,OAAOsH,KAAK9a,EAAEiX,YAEhEjX,EAAEiJ,aAAe,IAAIsK,EAAalT,KAAKqC,SACvC1C,EAAE2O,MAAQ,CACRC,mBAAoBvO,KAAKuO,mBAAmBkM,KAAKza,OAEnDL,EAAEyM,iBAAmB,IAAImM,EAAUiE,EAAoBxc,KAAKgc,QAAQxD,SAAU7Y,EAAEwP,cAAexP,EAAGK,KAAKqC,SACvG1C,EAAEyM,iBAAiBhJ,GAAG,KAAK,CAACI,KAAU7B,KAC/B3B,KAAA2D,KAAKH,KAAU7B,MAElB3B,KAAKgc,QAAQW,mBACfhd,EAAEgd,iBAAmBH,EAAoBxc,KAAKgc,QAAQW,kBAClDhd,EAAEgd,iBAAiBra,MAAQ3C,EAAAgd,iBAAiBra,KAAK3C,EAAGK,KAAKqC,QAAQua,UAAW5c,KAAKqC,UAEnFrC,KAAKgc,QAAQ/R,aACftK,EAAEsK,WAAauS,EAAoBxc,KAAKgc,QAAQ/R,YAC5CtK,EAAEsK,WAAW3H,MAAQ3C,EAAAsK,WAAW3H,KAAKtC,OAE3CA,KAAK2G,WAAa,IAAIK,EAAWhH,KAAKiH,SAAUjH,KAAKqC,SACrDrC,KAAK2G,WAAWvD,GAAG,KAAK,CAACI,KAAU7B,KAC5B3B,KAAA2D,KAAKH,KAAU7B,MAEjB3B,KAAAgc,QAAQC,SAAS1Y,SAAa6B,IAC7BA,EAAE9C,MAAQ8C,EAAA9C,KAAKtC,QAEtB,CAGG,GAFCA,KAAAmT,OAASnT,KAAKqC,QAAQkF,cAAc4L,OACpCgG,IAAqBA,EAAA0C,GACtB7b,KAAKqC,QAAQuJ,cAAgB5L,KAAKiH,SAAS0V,mBAAqB3c,KAAKqC,QAAQqC,IAAK,CACpF,MAAM2J,EAAQrO,KAAKiH,SAASyE,cAAcC,iBAAiB3L,KAAKqC,QAAQuJ,aACpEyC,EAAMlQ,OAAS,GAAkB,QAAbkQ,EAAM,KAAmBrO,KAAAqC,QAAQqC,IAAM2J,EAAM,GACtE,CACIrO,KAAKiH,SAAS0V,kBAAqB3c,KAAKqC,QAAQqC,KAC9C1E,KAAAwC,OAAOX,KAAK,2DAEF,CAAC,cAAe,oBAAqB,oBAAqB,qBAClE0B,SAAkB6W,IACpBpa,KAAAoa,GAAU,IAAIzY,IAAS3B,KAAKyY,MAAM2B,MAAWzY,MAE5B,CAAC,cAAe,eAAgB,oBAAqB,wBAC7D4B,SAAkB6W,IAC3Bpa,KAAAoa,GAAU,IAAIzY,KACjB3B,KAAKyY,MAAM2B,MAAWzY,GACf3B,SAGX,MAAM6c,EAAW/f,IACXoT,EAAO,KACL,MAAA4M,EAAS,CAAC1K,EAAKlL,KACnBlH,KAAKsc,gBAAiB,EAClBtc,KAAKoc,gBAAkBpc,KAAK+c,sBAA2B/c,KAAAwC,OAAOX,KAAK,yEACvE7B,KAAKoc,eAAgB,EAChBpc,KAAKqC,QAAQga,cAAc7Z,OAAOd,IAAI,cAAe1B,KAAKqC,SAC1DrC,KAAA2D,KAAK,cAAe3D,KAAKqC,SAC9Bwa,EAAS1f,QAAQ+J,GACjBiS,EAAS/G,EAAKlL,IAEhB,GAAIlH,KAAKkZ,YAAclZ,KAAKoc,cAAe,OAAOU,EAAO,KAAM9c,KAAKkH,EAAEuT,KAAKza,OAC3EA,KAAKmH,eAAenH,KAAKqC,QAAQqC,IAAKoY,IAOjC,OALH9c,KAAKqC,QAAQ8C,YAAcnF,KAAKqC,QAAQgZ,cAG1Cb,WAAWtK,EAAM,GAEZ2M,CACR,CACD,aAAAG,CAAc5V,EAAU+R,EAAW0C,GA5xDrC,IAAA9Z,EAAAC,EA6xDI,IAAIib,EAAe9D,EACnB,MAAM1P,EAAU7M,EAASwK,GAAYA,EAAWpH,KAAKoH,SAErD,GADwB,mBAAbA,IAAwC6V,EAAA7V,IAC9CpH,KAAKqC,QAAQ8C,WAAanF,KAAKqC,QAAQmZ,wBAAyB,CACnE,GAA+B,YAAlB,MAAT/R,OAAS,EAAAA,EAAAH,kBAAgCtJ,KAAKqC,QAAQiZ,SAA2C,IAAhCtb,KAAKqC,QAAQiZ,QAAQnd,eAAsB8e,IAChH,MAAM7D,EAAS,GACT8D,EAAgBxY,IACpB,IAAKA,EAAK,OACV,GAAY,WAARA,EAAkB,OACT1E,KAAKiH,SAASyE,cAAcI,mBAAmBpH,GACvDnB,SAAayI,IACN,WAANA,GACAoN,EAAO1b,QAAQsO,GAAK,GAAGoN,EAAOvY,KAAKmL,OAG3C,GAAKvC,EAIHyT,EAAOzT,OAJK,CACMzJ,KAAKiH,SAASyE,cAAcC,iBAAiB3L,KAAKqC,QAAQuJ,aAClErI,SAAQyI,GAAKkR,EAAOlR,IACtC,CAGM,OAAAhK,EAAA,OAAAD,EAAA/B,KAAKqC,QAAQiZ,cAAb,EAAAvZ,EAAsBwB,UAAUvB,EAAAzD,KAAAwD,GAAAiK,GAAKkR,EAAOlR,KAC5ChM,KAAKiH,SAASmF,iBAAiB8D,KAAKkJ,EAAQpZ,KAAKqC,QAAQ6B,IAASvF,IAC3DA,GAAMqB,KAAKmd,mBAAoBnd,KAAKoH,UAAUpH,KAAKod,oBAAoBpd,KAAKoH,UACjF6V,EAAate,KAErB,MACMse,EAAa,KAEhB,CACD,eAAAI,CAAgB7R,EAAMtH,EAAIiV,GACxB,MAAM0D,EAAW/f,IAgBV,MAfa,mBAAT0O,IACE2N,EAAA3N,EACJA,OAAA,GAES,mBAAPtH,IACEiV,EAAAjV,EACNA,OAAA,GAEFsH,IAAMA,EAAOxL,KAAKkZ,WAClBhV,IAASA,EAAAlE,KAAKqC,QAAQ6B,IACtBiV,IAAqBA,EAAA0C,GAC1B7b,KAAKiH,SAASmF,iBAAiBqN,OAAOjO,EAAMtH,GAAWkO,IACrDyK,EAAS1f,UACTgc,EAAS/G,MAEJyK,CACR,CACD,GAAAS,CAAI9W,GACF,IAAKA,EAAc,MAAA,IAAI+W,MAAM,iGAC7B,IAAK/W,EAAO/E,KAAY,MAAA,IAAI8b,MAAM,4FAsB3B,MArBa,YAAhB/W,EAAO/E,OACTzB,KAAKgc,QAAQxD,QAAUhS,IAEL,WAAhBA,EAAO/E,MAAqB+E,EAAO9E,KAAO8E,EAAO3E,MAAQ2E,EAAO1E,SAClE9B,KAAKgc,QAAQxZ,OAASgE,GAEJ,qBAAhBA,EAAO/E,OACTzB,KAAKgc,QAAQW,iBAAmBnW,GAEd,eAAhBA,EAAO/E,OACTzB,KAAKgc,QAAQ/R,WAAazD,GAER,kBAAhBA,EAAO/E,MACT4E,EAAcE,iBAAiBC,GAEb,cAAhBA,EAAO/E,OACTzB,KAAKgc,QAAQpF,UAAYpQ,GAEP,aAAhBA,EAAO/E,MACJzB,KAAAgc,QAAQC,SAASpb,KAAK2F,GAEtBxG,IACR,CACD,mBAAAod,CAAoBpR,GAClB,GAAKA,GAAMhM,KAAKkZ,aACZ,CAAC,SAAU,OAAOxb,QAAQsO,IAAS,GAAvC,CACA,IAAA,IAASwR,EAAK,EAAGA,EAAKxd,KAAKkZ,UAAU/a,OAAQqf,IAAM,CAC3C,MAAAC,EAAYzd,KAAKkZ,UAAUsE,GACjC,KAAI,CAAC,SAAU,OAAO9f,QAAQ+f,IAAiB,IAC3Czd,KAAKyY,MAAMzS,4BAA4ByX,GAAY,CACrDzd,KAAKmd,iBAAmBM,EACxB,KACD,CACF,EACIzd,KAAKmd,kBAAoBnd,KAAKkZ,UAAUxb,QAAQsO,GAAK,GAAKhM,KAAKyY,MAAMzS,4BAA4BgG,KACpGhM,KAAKmd,iBAAmBnR,EACnBhM,KAAAkZ,UAAUwE,QAAQ1R,GAXc,CAaxC,CACD,cAAA7E,CAAezC,EAAKyU,GAClBnZ,KAAK2d,qBAAuBjZ,EAC5B,MAAMmY,EAAW/f,IACZkD,KAAA2D,KAAK,mBAAoBe,GAC9B,MAAMkZ,EAAmB5R,IACvBhM,KAAKoH,SAAW4E,EAChBhM,KAAKkZ,UAAYlZ,KAAKiH,SAASyE,cAAcI,mBAAmBE,GAChEhM,KAAKmd,sBAAmB,EACxBnd,KAAKod,oBAAoBpR,IAErBgO,EAAO,CAAC5H,EAAKpG,KACbA,EACEhM,KAAK2d,uBAAyBjZ,IAChCkZ,EAAY5R,GACPhM,KAAA2G,WAAWQ,eAAe6E,GAC/BhM,KAAK2d,0BAAuB,EACvB3d,KAAA2D,KAAK,kBAAmBqI,GACxBhM,KAAAwC,OAAOd,IAAI,kBAAmBsK,IAGrChM,KAAK2d,0BAAuB,EAE9Bd,EAAS1f,SAAQ,IAAIwE,IAAS3B,KAAKkH,KAAKvF,KACpCwX,KAAmB/G,GAAK,IAAIzQ,IAAS3B,KAAKkH,KAAKvF,MAE/Ckc,EAAiBrS,IAj5D3B,IAAAzJ,EAAAC,EAk5DW0C,GAAQ8G,IAAQxL,KAAKiH,SAAS0V,qBAAyB,IAC5D,MAAMmB,EAAKlhB,EAAS4O,GAAQA,EAAOA,GAAQA,EAAK,GAC1CQ,EAAIhM,KAAKyY,MAAMzS,4BAA4B8X,GAAMA,EAAK9d,KAAKiH,SAASyE,cAAc0E,sBAAsBxT,EAAS4O,GAAQ,CAACA,GAAQA,GACpIQ,IACGhM,KAAKoH,UACRwW,EAAY5R,GAEThM,KAAK2G,WAAWS,UAAepH,KAAA2G,WAAWQ,eAAe6E,GAC9D,OAAAhK,EAAA,OAAAD,EAAA/B,KAAKiH,SAAS0V,uBAAkB,EAAA5a,EAAAgc,oBAAoB/b,EAAAzD,KAAAwD,EAAAiK,IAEjDhM,KAAAgd,cAAchR,GAAUoG,IAC3B4H,EAAK5H,EAAKpG,OAcP,OAXFtH,IAAO1E,KAAKiH,SAAS0V,kBAAqB3c,KAAKiH,SAAS0V,iBAAiBqB,OAElEtZ,GAAO1E,KAAKiH,SAAS0V,kBAAoB3c,KAAKiH,SAAS0V,iBAAiBqB,MAC7B,IAAjDhe,KAAKiH,SAAS0V,iBAAiBsB,OAAO9f,OACxC6B,KAAKiH,SAAS0V,iBAAiBsB,SAASvD,KAAKmD,GAExC7d,KAAAiH,SAAS0V,iBAAiBsB,OAAOJ,GAGxCA,EAAOnZ,GARPmZ,EAAO7d,KAAKiH,SAAS0V,iBAAiBsB,UAUjCpB,CACR,CACD,SAAAqB,CAAUxZ,EAAKR,EAAIia,GACjB,MAAMC,EAAS,CAAC3gB,EAAK2d,KAASrD,KACxB,IAAAzQ,EAEEA,EADc,iBAAT8T,EACLpb,KAAKqC,QAAQ4G,iCAAiC,CAACxL,EAAK2d,GAAMnW,OAAO8S,IAEjE,IACCqD,GAGL9T,EAAA5C,IAAM4C,EAAE5C,KAAO0Z,EAAO1Z,IACtB4C,EAAAkE,KAAOlE,EAAEkE,MAAQ4S,EAAO5S,KACxBlE,EAAApD,GAAKoD,EAAEpD,IAAMka,EAAOla,GACF,KAAhBoD,EAAE6W,YAAkB7W,EAAE6W,UAAY7W,EAAE6W,WAAaA,GAAaC,EAAOD,WACnE,MAAApd,EAAef,KAAKqC,QAAQtB,cAAgB,IAC9C,IAAAsd,EAMG,OAJOA,EADV/W,EAAE6W,WAAava,MAAMe,QAAQlH,GACnBA,EAAI4K,KAAI7J,GAAK,GAAG8I,EAAE6W,YAAYpd,IAAevC,MAE7C8I,EAAE6W,UAAY,GAAG7W,EAAE6W,YAAYpd,IAAetD,IAAQA,EAE7DuC,KAAKkH,EAAEmX,EAAW/W,IASpB,OAPH1K,EAAS8H,GACX0Z,EAAO1Z,IAAMA,EAEb0Z,EAAO5S,KAAO9G,EAEhB0Z,EAAOla,GAAKA,EACZka,EAAOD,UAAYA,EACZC,CACR,CACD,CAAAlX,IAAKvF,GA78DP,IAAAI,EA88DI,OAAO,OAAAA,EAAK/B,KAAA2G,iBAAY,EAAA5E,EAAAgH,aAAapH,EACtC,CACD,MAAA0F,IAAU1F,GAh9DZ,IAAAI,EAi9DI,OAAO,OAAAA,EAAK/B,KAAA2G,iBAAY,EAAA5E,EAAAsF,UAAU1F,EACnC,CACD,mBAAA2c,CAAoBpa,GAClBlE,KAAKqC,QAAQ8B,UAAYD,CAC1B,CACD,kBAAAqK,CAAmBrK,EAAI7B,EAAU,IAC3B,IAACrC,KAAKoc,cAED,OADPpc,KAAKwC,OAAOX,KAAK,kDAAmD7B,KAAKkZ,YAClE,EAET,IAAKlZ,KAAKkZ,YAAclZ,KAAKkZ,UAAU/a,OAE9B,OADP6B,KAAKwC,OAAOX,KAAK,6DAA8D7B,KAAKkZ,YAC7E,EAET,MAAMxU,EAAMrC,EAAQqC,KAAO1E,KAAKmd,kBAAoBnd,KAAKkZ,UAAU,GAC7DtN,IAAc5L,KAAKqC,SAAUrC,KAAKqC,QAAQuJ,YAC1C2S,EAAUve,KAAKkZ,UAAUlZ,KAAKkZ,UAAU/a,OAAS,GACvD,GAA0B,WAAtBuG,EAAI4E,cAAmC,OAAA,EACrC,MAAAkV,EAAiB,CAACxS,EAAGkO,KACnB,MAAAuE,EAAYze,KAAKiH,SAASmF,iBAAiB2M,MAAM,GAAG/M,KAAKkO,KAC/D,OAAqB,IAAduE,GAAkC,IAAdA,GAAiC,IAAdA,GAEhD,GAAIpc,EAAQqc,SAAU,CACpB,MAAMC,EAAYtc,EAAQqc,SAAS1e,KAAMwe,GACrC,QAAc,IAAdG,EAAgC,OAAAA,CACrC,CACD,QAAI3e,KAAK6F,kBAAkBnB,EAAKR,OAC3BlE,KAAKiH,SAASmF,iBAAiBoM,WAAWxY,KAAKqC,QAAQ8C,WAAcnF,KAAKqC,QAAQmZ,8BACnFgD,EAAe9Z,EAAKR,IAAS0H,IAAe4S,EAAeD,EAASra,IAEzE,CACD,cAAA0a,CAAe1a,EAAIiV,GACjB,MAAM0D,EAAW/f,IACb,OAACkD,KAAKqC,QAAQ6B,IAIdtH,EAASsH,KAAKA,EAAK,CAACA,IACxBA,EAAGX,SAAa2W,IACVla,KAAKqC,QAAQ6B,GAAGxG,QAAQwc,GAAK,GAAQla,KAAAqC,QAAQ6B,GAAGrD,KAAKqZ,MAE3Dla,KAAKgd,eAAqB5K,IACxByK,EAAS1f,UACLgc,KAAmB/G,MAElByK,IAXD1D,OACGjc,QAAQC,UAWlB,CACD,aAAA0hB,CAAcrT,EAAM2N,GAClB,MAAM0D,EAAW/f,IACbF,EAAS4O,KAAOA,EAAO,CAACA,IAC5B,MAAMsT,EAAY9e,KAAKqC,QAAQiZ,SAAW,GACpCyD,EAAUvT,EAAKtD,QAAOxD,GAAOoa,EAAUphB,QAAQgH,GAAO,GAAK1E,KAAKiH,SAASyE,cAAcuE,gBAAgBvL,KACzG,OAACqa,EAAQ5gB,QAIb6B,KAAKqC,QAAQiZ,QAAUwD,EAAU7Z,OAAO8Z,GACxC/e,KAAKgd,eAAqB5K,IACxByK,EAAS1f,UACLgc,KAAmB/G,MAElByK,IARD1D,OACGjc,QAAQC,UAQlB,CACD,GAAA6hB,CAAIta,GAhhEN,IAAA3C,EAAAC,EAkhEQ,GADC0C,IAAWA,EAAA1E,KAAKmd,oBAAqB,OAAApb,EAAK/B,KAAAkZ,gBAAW,EAAAnX,EAAA5D,QAAS,EAAI6B,KAAKkZ,UAAU,GAAKlZ,KAAKoH,YAC3F1C,EAAY,MAAA,MACjB,MACMgH,GAAgB,OAAA1J,OAAKiF,eAAL,EAAAjF,EAAe0J,gBAAiB,IAAI6D,EAAahP,KACvE,MAFgB,CAAC,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,MAAO,MAAO,MAAO,KAAM,KAAM,MAAO,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,MAAO,KAAM,MAAO,OAEna7C,QAAQgO,EAAciE,wBAAwBjL,KAAc,GAAAA,EAAI4E,cAAc5L,QAAQ,SAAW,EAAI,MAAQ,KAC7H,CACD,qBAAOuhB,CAAe5c,EAAU,CAAE,EAAE8W,GAC3B,OAAA,IAAI2C,EAAKzZ,EAAS8W,EAC1B,CACD,aAAA+F,CAAc7c,EAAU,GAAI8W,EAAW0C,GACrC,MAAMsD,EAAoB9c,EAAQ8c,kBAC9BA,UAA0B9c,EAAQ8c,kBACtC,MAAMC,EAAgB,IACjBpf,KAAKqC,WACLA,EAEDga,SAAS,GAGPrZ,EAAQ,IAAI8Y,EAAKsD,QACD,IAAlB/c,EAAQI,YAA0C,IAAnBJ,EAAQE,SACzCS,EAAMR,OAASQ,EAAMR,OAAOQ,MAAMX,IAYpC,GAVsB,CAAC,QAAS,WAAY,YAC9BkB,SAAa6B,IACnBpC,EAAAoC,GAAKpF,KAAKoF,MAElBpC,EAAMiE,SAAW,IACZjH,KAAKiH,UAEVjE,EAAMiE,SAASqH,MAAQ,CACrBC,mBAAoBvL,EAAMuL,mBAAmBkM,KAAKzX,IAEhDmc,EAAmB,CACf,MAAAE,EAAajhB,OAAO6H,KAAKjG,KAAKyY,MAAM/Y,MAAMqW,QAAO,CAACuJ,EAAMtT,KAC5DsT,EAAKtT,GAAK,IACLhM,KAAKyY,MAAM/Y,KAAKsM,IAEhBsT,EAAAtT,GAAK5N,OAAO6H,KAAKqZ,EAAKtT,IAAI+J,QAAO,CAACwJ,EAAKrF,KAC1CqF,EAAIrF,GAAK,IACJoF,EAAKtT,GAAGkO,IAENqF,IACND,EAAKtT,IACDsT,IACN,CAAE,GACLtc,EAAMyV,MAAQ,IAAIxU,EAAcob,EAAYD,GACtCpc,EAAAiE,SAASkI,cAAgBnM,EAAMyV,KACtC,CAUM,OATPzV,EAAM2D,WAAa,IAAIK,EAAWhE,EAAMiE,SAAUmY,GAClDpc,EAAM2D,WAAWvD,GAAG,KAAK,CAACI,KAAU7B,KAC5BqB,EAAAW,KAAKH,KAAU7B,MAEjBqB,EAAAV,KAAK8c,EAAejG,GAC1BnW,EAAM2D,WAAWtE,QAAU+c,EACrBpc,EAAA2D,WAAWyF,iBAAiBnF,SAASqH,MAAQ,CACjDC,mBAAoBvL,EAAMuL,mBAAmBkM,KAAKzX,IAE7CA,CACR,CACD,MAAAoD,GACS,MAAA,CACL/D,QAASrC,KAAKqC,QACdoW,MAAOzY,KAAKyY,MACZrR,SAAUpH,KAAKoH,SACf8R,UAAWlZ,KAAKkZ,UAChBiE,iBAAkBnd,KAAKmd,iBAE1B,EAEE,MAACqC,EAAW1D,EAAKmD,iBACtBO,EAASP,eAAiBnD,EAAKmD,eAERO,EAASP,eACpBO,EAASR,IACRQ,EAASld,KACAkd,EAASxC,cACPwC,EAASnC,gBACrBmC,EAASlC,IACEkC,EAASrY,eACdqY,EAAStB,UACjBsB,EAAStY,EACJsY,EAASnY,OACImY,EAASlB,oBACVkB,EAASjR,mBACbiR,EAASZ,eACVY,EAASX","x_google_ignoreList":[0]}